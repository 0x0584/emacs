;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(coding-system-history dired-regexp-history org-tags-history sgml-tag-history minibuffer-history-search-history sql-user-history magit-revision-history grep-find-history org--links-history org-read-date-history sx-search--query-history Info-search-history command-history compile-history query-replace-from-to-history regexp-history wordnut-completion-hist query-replace-history yes-or-no-p-history erc-server-history-list shell-command-history Man-topic-history buffer-name-history xref--read-identifier-history c-set-style-history minibuffer-history face-name-history extended-command-history read-expression-history file-name-history))
(setq coding-system-history '("unix"))
(setq dired-regexp-history '("$*.c" "*.c" "*.c$"))
(setq org-tags-history '("guitar" "gui" "class" "data" "goto" "find" ":not:" "find"))
(setq sgml-tag-history '("html"))
(setq magit-revision-history '("changes" "pre-alpha" "master" "newlook" "new_look" "master" "new_look" "HEAD"))
(setq grep-find-history '("find . -type f -exec grep --color -nH -e \"zero.c\" {} +"))
(setq org-read-date-history '("   " "20:00    " "15:00    " "10:00    " "   " "12:00    " "   " "18:00    " "16:00    " "   " "12:00    " "   " "15:00    " "    " "20:00    "))
(setq sx-search--query-history '("date diff java" "swap nodes linked list" "swap nodes "))
(setq Info-search-history '("begin_src" "#+BEGIN_SRC"))
(setq command-history '((find-file "~/.emacs.d/" t) (magit-tag "pre-alpha" "changes" nil) (kill-buffer "hr.xml") (switch-to-buffer "hr.xml" nil 'force-same-window) (magit-status "~/Workspace/Projet/" '((9 . 9) (("/home/arubu/Workspace/Projet/GH-FLSHJ/data/xml/" "rev-parse" "--show-toplevel") . "/home/arubu/Workspace/Projet") (("/home/arubu/Workspace/Projet/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8 data ("git.name" ("Anas Rchid") "git.email" ("rchid.anas@gmail.com") "user.name" ("Anas Rchid") "user.email" ("rchid.anas@gmail.com") "alias.a" ("add") "alias.ap" ("add -p") "alias.ac" ("!git add . && git commit -a -m") "alias.acu" ("!git add -u && git commit -a -m") "alias.c" ("commit --verbose") "alias.ca" ("commit -a --verbose") "alias.cm" ("commit -m") "alias.cam" ("commit -a -m") "alias.m" ("commit --amend --verbose") "alias.d" ("diff") "alias.ds" ("diff --stat -r") "alias.dch" ("diff --name-status -r") "alias.dca" ("diff --cached") "alias.s" ("status -s") "alias.co" ("checkout") "alias.cob" ("checkout -b") "alias.cl" ("clone") "alias.undo" ("reset --hard") "alias.pushitgood" ("!echo -e 'Ah, push it..
' && git push -u origin --all && echo -e '
P-push it real good'") "alias.cleanmerged" ("!git branch --merged | grep -v \"\\*\" | xargs -n 1 git branch -d") "alias.l" ("log --pretty=format:%C(red)%h\\ %ad%C(yellow)%d\\ %Creset%s --decorate --date=short") "alias.ll" ("log --pretty=format:%C(red)%h\\ %ad%Cyellow%d\\ %Creset%s%Cblue\\ [%cn] --decorate --date=short") "alias.hist" ("log --graph --pretty=format:'%Cred%h%Creset	 - %s %C(yellow)%d%Creset' --abbrev-commit --date=relative") "alias.histt" ("log --graph --pretty=format:'%Cred%h%Creset	 - %s %Cgreen(%cr) %C(yellow)%d%Creset' --abbrev-commit --date=relative") "alias.hista" ("log --graph --pretty=format:'%Cred%h%Creset	 - %s %Cgreen(%cr) %C(bold blue)<%an>%Creset %C(yellow)%d%Creset' --abbrev-commit --date=relative") "alias.tree" ("log --oneline --decorate --graph") "alias.fine" ("log --decorate --pretty=format:'(%C(yellow)%h %Creset -> %C(blue) %p%Creset) %Cgreen%cr%Creset %n  %C(white)\"%s\"%Creset%n' --graph --topo-order") "alias.new" ("!sh -c 'git log $1@{1}..$1@{0} $@'") "alias.whois" ("!sh -c 'git log -i -1 --pretty=\"format:%an <%ae>
\" --author=\"$1\"' -") "alias.whatis" ("show -s --pretty='tformat:%h (%s, %ad)' --date=short") "alias.bb" ("!git for-each-ref --sort='-authordate' --format='%(authordate)%09%(objectname:short)%09%(refname)' refs/heads | sed -e 's-refs/heads/--'") "alias.la" ("!git config -l | grep alias | cut -c 7-") "alias.deleted" ("log --diff-filter=D --summary") "cola.tabwidth" ("4") "cola.linebreak" ("false") "cola.boldheaders" ("true") "gui.editor" ("emacsclient -c") "diff.tool" ("meld") "merge.tool" ("meld") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "core.preloadindex" ("true") "log.showsignature" ("false")))) (("/home/arubu/Workspace/Projet/" . magit-toplevel) . "/home/arubu/Workspace/Projet/") (("~/Workspace/Projet/" . magit-toplevel) . "/home/arubu/Workspace/Projet/") (("/home/arubu/Workspace/Projet/" "rev-parse" "--show-cdup") . "") (("/home/arubu/Workspace/Projet/" "rev-parse" "--show-toplevel") . "/home/arubu/Workspace/Projet") (("~/" . magit-toplevel)) (("/home/arubu/" "rev-parse" "--git-dir")) (("/home/arubu/" "rev-parse" "--show-toplevel")))) (find-file "~/Workspace/Projet/GH-FLSHJ/data/xml/hr.xml" t) (magit-status "~/Workspace/Projet/" '((51 . 27) (("/home/arubu/Workspace/Projet/" "rev-parse" "--short" "HEAD~") . "762f3dd") (("/home/arubu/Workspace/Projet/" "rev-parse" "--short" "HEAD") . "8b65499") (("/home/arubu/Workspace/Projet/" "rev-parse" "--verify" "HEAD~10") . "67b07287981f5c2b0a8c3989db29bc430439bc47") (("/home/arubu/Workspace/Projet/" "rev-parse" "@{upstream}")) (("/home/arubu/Workspace/Projet/" "rev-parse" "--verify" "refs/stash")) (("/home/arubu/Workspace/Projet/" "rev-parse" "--is-bare-repository") . "false
") (("/home/arubu/Workspace/Projet/" magit-git-dir "BISECT_LOG") . "/home/arubu/Workspace/Projet/.git/BISECT_LOG") (("/home/arubu/Workspace/Projet/" magit-git-dir "REVERT_HEAD") . "/home/arubu/Workspace/Projet/.git/REVERT_HEAD") (("/home/arubu/Workspace/Projet/" magit-git-dir "CHERRY_PICK_HEAD") . "/home/arubu/Workspace/Projet/.git/CHERRY_PICK_HEAD") (("/home/arubu/Workspace/Projet/" magit-git-dir "rebase-apply/applying") . "/home/arubu/Workspace/Projet/.git/rebase-apply/applying") (("/home/arubu/Workspace/Projet/" magit-git-dir "rebase-apply/onto") . "/home/arubu/Workspace/Projet/.git/rebase-apply/onto") (("/home/arubu/Workspace/Projet/" magit-git-dir "rebase-merge") . "/home/arubu/Workspace/Projet/.git/rebase-merge") (("/home/arubu/Workspace/Projet/" magit-git-dir "MERGE_HEAD") . "/home/arubu/Workspace/Projet/.git/MERGE_HEAD") (("/home/arubu/Workspace/Projet/" "rev-parse" "--git-dir") . ".git") (("/home/arubu/Workspace/Projet/" "describe" "--contains" "HEAD")) (("/home/arubu/Workspace/Projet/" "describe" "--long" "--tags") . "newlook-10-g8b65499") (("/home/arubu/Workspace/Projet/" "show" "--no-patch" "--format=%h %s" "changes^{commit}" "--") . "8b65499 more adjustments on holiday-related view") (("/home/arubu/Workspace/Projet/" "symbolic-ref" "--short" "HEAD") . "changes") (("/home/arubu/Workspace/Projet/" "rev-parse" "--verify" "HEAD") . "8b654991a47805d9890da4dc16aa417aae040853") (("/home/arubu/Workspace/Projet/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8 data ("git.name" ("Anas Rchid") "git.email" ("rchid.anas@gmail.com") "user.name" ("Anas Rchid") "user.email" ("rchid.anas@gmail.com") "alias.a" ("add") "alias.ap" ("add -p") "alias.ac" ("!git add . && git commit -a -m") "alias.acu" ("!git add -u && git commit -a -m") "alias.c" ("commit --verbose") "alias.ca" ("commit -a --verbose") "alias.cm" ("commit -m") "alias.cam" ("commit -a -m") "alias.m" ("commit --amend --verbose") "alias.d" ("diff") "alias.ds" ("diff --stat -r") "alias.dch" ("diff --name-status -r") "alias.dca" ("diff --cached") "alias.s" ("status -s") "alias.co" ("checkout") "alias.cob" ("checkout -b") "alias.cl" ("clone") "alias.undo" ("reset --hard") "alias.pushitgood" ("!echo -e 'Ah, push it..
' && git push -u origin --all && echo -e '
P-push it real good'") "alias.cleanmerged" ("!git branch --merged | grep -v \"\\*\" | xargs -n 1 git branch -d") "alias.l" ("log --pretty=format:%C(red)%h\\ %ad%C(yellow)%d\\ %Creset%s --decorate --date=short") "alias.ll" ("log --pretty=format:%C(red)%h\\ %ad%Cyellow%d\\ %Creset%s%Cblue\\ [%cn] --decorate --date=short") "alias.hist" ("log --graph --pretty=format:'%Cred%h%Creset	 - %s %C(yellow)%d%Creset' --abbrev-commit --date=relative") "alias.histt" ("log --graph --pretty=format:'%Cred%h%Creset	 - %s %Cgreen(%cr) %C(yellow)%d%Creset' --abbrev-commit --date=relative") "alias.hista" ("log --graph --pretty=format:'%Cred%h%Creset	 - %s %Cgreen(%cr) %C(bold blue)<%an>%Creset %C(yellow)%d%Creset' --abbrev-commit --date=relative") "alias.tree" ("log --oneline --decorate --graph") "alias.fine" ("log --decorate --pretty=format:'(%C(yellow)%h %Creset -> %C(blue) %p%Creset) %Cgreen%cr%Creset %n  %C(white)\"%s\"%Creset%n' --graph --topo-order") "alias.new" ("!sh -c 'git log $1@{1}..$1@{0} $@'") "alias.whois" ("!sh -c 'git log -i -1 --pretty=\"format:%an <%ae>
\" --author=\"$1\"' -") "alias.whatis" ("show -s --pretty='tformat:%h (%s, %ad)' --date=short") "alias.bb" ("!git for-each-ref --sort='-authordate' --format='%(authordate)%09%(objectname:short)%09%(refname)' refs/heads | sed -e 's-refs/heads/--'") "alias.la" ("!git config -l | grep alias | cut -c 7-") "alias.deleted" ("log --diff-filter=D --summary") "cola.tabwidth" ("4") "cola.linebreak" ("false") "cola.boldheaders" ("true") "gui.editor" ("emacsclient -c") "diff.tool" ("meld") "merge.tool" ("meld") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "core.preloadindex" ("true") "log.showsignature" ("false")))) (("/home/arubu/Workspace/Projet/" . magit-toplevel) . "/home/arubu/Workspace/Projet/") (("~/Workspace/Projet/" . magit-toplevel) . "/home/arubu/Workspace/Projet/") (("/home/arubu/Workspace/Projet/" "rev-parse" "--show-cdup") . "") (("/home/arubu/Workspace/Projet/" "rev-parse" "--show-toplevel") . "/home/arubu/Workspace/Projet") (("~/" . magit-toplevel)) (("/home/arubu/" "rev-parse" "--git-dir")) (("/home/arubu/" "rev-parse" "--show-toplevel")))) (sx-search "stackoverflow" "date diff java" nil nil) (magit-status "~/Workspace/Projet/" '((51 . 27) (("/home/arubu/Workspace/Projet/" "rev-parse" "--short" "HEAD~") . "afd5bce") (("/home/arubu/Workspace/Projet/" "rev-parse" "--short" "HEAD") . "e15faaa") (("/home/arubu/Workspace/Projet/" "rev-parse" "--verify" "HEAD~10") . "bcba9929174c36179922f2c2f361d1a20260ff0d") (("/home/arubu/Workspace/Projet/" "rev-parse" "@{upstream}")) (("/home/arubu/Workspace/Projet/" "rev-parse" "--verify" "refs/stash")) (("/home/arubu/Workspace/Projet/" "rev-parse" "--is-bare-repository") . "false
") (("/home/arubu/Workspace/Projet/" magit-git-dir "BISECT_LOG") . "/home/arubu/Workspace/Projet/.git/BISECT_LOG") (("/home/arubu/Workspace/Projet/" magit-git-dir "REVERT_HEAD") . "/home/arubu/Workspace/Projet/.git/REVERT_HEAD") (("/home/arubu/Workspace/Projet/" magit-git-dir "CHERRY_PICK_HEAD") . "/home/arubu/Workspace/Projet/.git/CHERRY_PICK_HEAD") (("/home/arubu/Workspace/Projet/" magit-git-dir "rebase-apply/applying") . "/home/arubu/Workspace/Projet/.git/rebase-apply/applying") (("/home/arubu/Workspace/Projet/" magit-git-dir "rebase-apply/onto") . "/home/arubu/Workspace/Projet/.git/rebase-apply/onto") (("/home/arubu/Workspace/Projet/" magit-git-dir "rebase-merge") . "/home/arubu/Workspace/Projet/.git/rebase-merge") (("/home/arubu/Workspace/Projet/" magit-git-dir "MERGE_HEAD") . "/home/arubu/Workspace/Projet/.git/MERGE_HEAD") (("/home/arubu/Workspace/Projet/" "rev-parse" "--git-dir") . ".git") (("/home/arubu/Workspace/Projet/" "describe" "--contains" "HEAD")) (("/home/arubu/Workspace/Projet/" "describe" "--long" "--tags") . "newlook-9-ge15faaa") (("/home/arubu/Workspace/Projet/" "show" "--no-patch" "--format=%h %s" "changes^{commit}" "--") . "e15faaa handle holidays from MainWin") (("/home/arubu/Workspace/Projet/" "symbolic-ref" "--short" "HEAD") . "changes") (("/home/arubu/Workspace/Projet/" "rev-parse" "--verify" "HEAD") . "e15faaa1a1311d17a35db3772639674598e9a5b4") (("/home/arubu/Workspace/Projet/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8 data ("git.name" ("Anas Rchid") "git.email" ("rchid.anas@gmail.com") "user.name" ("Anas Rchid") "user.email" ("rchid.anas@gmail.com") "alias.a" ("add") "alias.ap" ("add -p") "alias.ac" ("!git add . && git commit -a -m") "alias.acu" ("!git add -u && git commit -a -m") "alias.c" ("commit --verbose") "alias.ca" ("commit -a --verbose") "alias.cm" ("commit -m") "alias.cam" ("commit -a -m") "alias.m" ("commit --amend --verbose") "alias.d" ("diff") "alias.ds" ("diff --stat -r") "alias.dch" ("diff --name-status -r") "alias.dca" ("diff --cached") "alias.s" ("status -s") "alias.co" ("checkout") "alias.cob" ("checkout -b") "alias.cl" ("clone") "alias.undo" ("reset --hard") "alias.pushitgood" ("!echo -e 'Ah, push it..
' && git push -u origin --all && echo -e '
P-push it real good'") "alias.cleanmerged" ("!git branch --merged | grep -v \"\\*\" | xargs -n 1 git branch -d") "alias.l" ("log --pretty=format:%C(red)%h\\ %ad%C(yellow)%d\\ %Creset%s --decorate --date=short") "alias.ll" ("log --pretty=format:%C(red)%h\\ %ad%Cyellow%d\\ %Creset%s%Cblue\\ [%cn] --decorate --date=short") "alias.hist" ("log --graph --pretty=format:'%Cred%h%Creset	 - %s %C(yellow)%d%Creset' --abbrev-commit --date=relative") "alias.histt" ("log --graph --pretty=format:'%Cred%h%Creset	 - %s %Cgreen(%cr) %C(yellow)%d%Creset' --abbrev-commit --date=relative") "alias.hista" ("log --graph --pretty=format:'%Cred%h%Creset	 - %s %Cgreen(%cr) %C(bold blue)<%an>%Creset %C(yellow)%d%Creset' --abbrev-commit --date=relative") "alias.tree" ("log --oneline --decorate --graph") "alias.fine" ("log --decorate --pretty=format:'(%C(yellow)%h %Creset -> %C(blue) %p%Creset) %Cgreen%cr%Creset %n  %C(white)\"%s\"%Creset%n' --graph --topo-order") "alias.new" ("!sh -c 'git log $1@{1}..$1@{0} $@'") "alias.whois" ("!sh -c 'git log -i -1 --pretty=\"format:%an <%ae>
\" --author=\"$1\"' -") "alias.whatis" ("show -s --pretty='tformat:%h (%s, %ad)' --date=short") "alias.bb" ("!git for-each-ref --sort='-authordate' --format='%(authordate)%09%(objectname:short)%09%(refname)' refs/heads | sed -e 's-refs/heads/--'") "alias.la" ("!git config -l | grep alias | cut -c 7-") "alias.deleted" ("log --diff-filter=D --summary") "cola.tabwidth" ("4") "cola.linebreak" ("false") "cola.boldheaders" ("true") "gui.editor" ("emacsclient -c") "diff.tool" ("meld") "merge.tool" ("meld") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "core.preloadindex" ("true") "log.showsignature" ("false")))) (("/home/arubu/Workspace/Projet/" . magit-toplevel) . "/home/arubu/Workspace/Projet/") (("~/Workspace/Projet/" . magit-toplevel) . "/home/arubu/Workspace/Projet/") (("/home/arubu/Workspace/Projet/" "rev-parse" "--show-cdup") . "") (("/home/arubu/Workspace/Projet/" "rev-parse" "--show-toplevel") . "/home/arubu/Workspace/Projet") (("~/" . magit-toplevel)) (("/home/arubu/" "rev-parse" "--git-dir")) (("/home/arubu/" "rev-parse" "--show-toplevel")))) (magit-gitignore "*.png" nil) (magit-stage-file "GH-FLSHJ/Diagrams/DetailedClasses.ucls") (magit-status "~/Workspace/Projet/" '((46 . 27) (("/home/arubu/Workspace/Projet/" "rev-parse" "--short" "HEAD~") . "525e0b4") (("/home/arubu/Workspace/Projet/" "rev-parse" "--short" "HEAD") . "afd5bce") (("/home/arubu/Workspace/Projet/" "rev-parse" "--verify" "HEAD~10") . "a640f4493ac7762bcd675c4a1bf15cfa2796e842") (("/home/arubu/Workspace/Projet/" "rev-parse" "@{upstream}")) (("/home/arubu/Workspace/Projet/" "rev-parse" "--verify" "refs/stash")) (("/home/arubu/Workspace/Projet/" "rev-parse" "--is-bare-repository") . "false
") (("/home/arubu/Workspace/Projet/" magit-git-dir "BISECT_LOG") . "/home/arubu/Workspace/Projet/.git/BISECT_LOG") (("/home/arubu/Workspace/Projet/" magit-git-dir "REVERT_HEAD") . "/home/arubu/Workspace/Projet/.git/REVERT_HEAD") (("/home/arubu/Workspace/Projet/" magit-git-dir "CHERRY_PICK_HEAD") . "/home/arubu/Workspace/Projet/.git/CHERRY_PICK_HEAD") (("/home/arubu/Workspace/Projet/" magit-git-dir "rebase-apply/applying") . "/home/arubu/Workspace/Projet/.git/rebase-apply/applying") (("/home/arubu/Workspace/Projet/" magit-git-dir "rebase-apply/onto") . "/home/arubu/Workspace/Projet/.git/rebase-apply/onto") (("/home/arubu/Workspace/Projet/" magit-git-dir "rebase-merge") . "/home/arubu/Workspace/Projet/.git/rebase-merge") (("/home/arubu/Workspace/Projet/" magit-git-dir "MERGE_HEAD") . "/home/arubu/Workspace/Projet/.git/MERGE_HEAD") (("/home/arubu/Workspace/Projet/" "rev-parse" "--git-dir") . ".git") (("/home/arubu/Workspace/Projet/" "describe" "--contains" "HEAD")) (("/home/arubu/Workspace/Projet/" "describe" "--long" "--tags") . "newlook-8-gafd5bce") (("/home/arubu/Workspace/Projet/" "show" "--no-patch" "--format=%h %s" "master^{commit}" "--") . "afd5bce update MainWin's design: adding option when selecting a Holiday") (("/home/arubu/Workspace/Projet/" "symbolic-ref" "--short" "HEAD") . "master") (("/home/arubu/Workspace/Projet/" "rev-parse" "--verify" "HEAD") . "afd5bce2735ede570cb10afee63e7f7ac37fe9c4") (("/home/arubu/Workspace/Projet/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8 data ("git.name" ("Anas Rchid") "git.email" ("rchid.anas@gmail.com") "user.name" ("Anas Rchid") "user.email" ("rchid.anas@gmail.com") "alias.a" ("add") "alias.ap" ("add -p") "alias.ac" ("!git add . && git commit -a -m") "alias.acu" ("!git add -u && git commit -a -m") "alias.c" ("commit --verbose") "alias.ca" ("commit -a --verbose") "alias.cm" ("commit -m") "alias.cam" ("commit -a -m") "alias.m" ("commit --amend --verbose") "alias.d" ("diff") "alias.ds" ("diff --stat -r") "alias.dch" ("diff --name-status -r") "alias.dca" ("diff --cached") "alias.s" ("status -s") "alias.co" ("checkout") "alias.cob" ("checkout -b") "alias.cl" ("clone") "alias.undo" ("reset --hard") "alias.pushitgood" ("!echo -e 'Ah, push it..
' && git push -u origin --all && echo -e '
P-push it real good'") "alias.cleanmerged" ("!git branch --merged | grep -v \"\\*\" | xargs -n 1 git branch -d") "alias.l" ("log --pretty=format:%C(red)%h\\ %ad%C(yellow)%d\\ %Creset%s --decorate --date=short") "alias.ll" ("log --pretty=format:%C(red)%h\\ %ad%Cyellow%d\\ %Creset%s%Cblue\\ [%cn] --decorate --date=short") "alias.hist" ("log --graph --pretty=format:'%Cred%h%Creset	 - %s %C(yellow)%d%Creset' --abbrev-commit --date=relative") "alias.histt" ("log --graph --pretty=format:'%Cred%h%Creset	 - %s %Cgreen(%cr) %C(yellow)%d%Creset' --abbrev-commit --date=relative") "alias.hista" ("log --graph --pretty=format:'%Cred%h%Creset	 - %s %Cgreen(%cr) %C(bold blue)<%an>%Creset %C(yellow)%d%Creset' --abbrev-commit --date=relative") "alias.tree" ("log --oneline --decorate --graph") "alias.fine" ("log --decorate --pretty=format:'(%C(yellow)%h %Creset -> %C(blue) %p%Creset) %Cgreen%cr%Creset %n  %C(white)\"%s\"%Creset%n' --graph --topo-order") "alias.new" ("!sh -c 'git log $1@{1}..$1@{0} $@'") "alias.whois" ("!sh -c 'git log -i -1 --pretty=\"format:%an <%ae>
\" --author=\"$1\"' -") "alias.whatis" ("show -s --pretty='tformat:%h (%s, %ad)' --date=short") "alias.bb" ("!git for-each-ref --sort='-authordate' --format='%(authordate)%09%(objectname:short)%09%(refname)' refs/heads | sed -e 's-refs/heads/--'") "alias.la" ("!git config -l | grep alias | cut -c 7-") "alias.deleted" ("log --diff-filter=D --summary") "cola.tabwidth" ("4") "cola.linebreak" ("false") "cola.boldheaders" ("true") "gui.editor" ("emacsclient -c") "diff.tool" ("meld") "merge.tool" ("meld") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "core.preloadindex" ("true") "log.showsignature" ("false")))) (("/home/arubu/Workspace/Projet/" . magit-toplevel) . "/home/arubu/Workspace/Projet/") (("~/Workspace/Projet/" . magit-toplevel) . "/home/arubu/Workspace/Projet/") (("/home/arubu/Workspace/Projet/" "rev-parse" "--show-cdup") . "") (("/home/arubu/Workspace/Projet/" "rev-parse" "--show-toplevel") . "/home/arubu/Workspace/Projet") (("~/" . magit-toplevel)) (("/home/arubu/" "rev-parse" "--git-dir")) (("/home/arubu/" "rev-parse" "--show-toplevel")))) (magit-status "~/Workspace/Projet/" '((46 . 27) (("/home/arubu/Workspace/Projet/" "rev-parse" "--short" "HEAD~") . "0c9b0c8") (("/home/arubu/Workspace/Projet/" "rev-parse" "--short" "HEAD") . "35dd464") (("/home/arubu/Workspace/Projet/" "rev-parse" "--verify" "HEAD~10") . "c9ac7a8903ef2ccd021e2b9de99d4b6bbbd5531e") (("/home/arubu/Workspace/Projet/" "rev-parse" "@{upstream}")) (("/home/arubu/Workspace/Projet/" "rev-parse" "--verify" "refs/stash")) (("/home/arubu/Workspace/Projet/" "rev-parse" "--is-bare-repository") . "false
") (("/home/arubu/Workspace/Projet/" magit-git-dir "BISECT_LOG") . "/home/arubu/Workspace/Projet/.git/BISECT_LOG") (("/home/arubu/Workspace/Projet/" magit-git-dir "REVERT_HEAD") . "/home/arubu/Workspace/Projet/.git/REVERT_HEAD") (("/home/arubu/Workspace/Projet/" magit-git-dir "CHERRY_PICK_HEAD") . "/home/arubu/Workspace/Projet/.git/CHERRY_PICK_HEAD") (("/home/arubu/Workspace/Projet/" magit-git-dir "rebase-apply/applying") . "/home/arubu/Workspace/Projet/.git/rebase-apply/applying") (("/home/arubu/Workspace/Projet/" magit-git-dir "rebase-apply/onto") . "/home/arubu/Workspace/Projet/.git/rebase-apply/onto") (("/home/arubu/Workspace/Projet/" magit-git-dir "rebase-merge") . "/home/arubu/Workspace/Projet/.git/rebase-merge") (("/home/arubu/Workspace/Projet/" magit-git-dir "MERGE_HEAD") . "/home/arubu/Workspace/Projet/.git/MERGE_HEAD") (("/home/arubu/Workspace/Projet/" "rev-parse" "--git-dir") . ".git") (("/home/arubu/Workspace/Projet/" "describe" "--contains" "HEAD")) (("/home/arubu/Workspace/Projet/" "describe" "--long" "--tags") . "newlook-6-g35dd464") (("/home/arubu/Workspace/Projet/" "show" "--no-patch" "--format=%h %s" "master^{commit}" "--") . "35dd464 update package name, set operation to app") (("/home/arubu/Workspace/Projet/" "symbolic-ref" "--short" "HEAD") . "master") (("/home/arubu/Workspace/Projet/" "rev-parse" "--verify" "HEAD") . "35dd464125c7fd6ff35d95b650c5c169824dcd30") (("/home/arubu/Workspace/Projet/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8 data ("git.name" ("Anas Rchid") "git.email" ("rchid.anas@gmail.com") "user.name" ("Anas Rchid") "user.email" ("rchid.anas@gmail.com") "alias.a" ("add") "alias.ap" ("add -p") "alias.ac" ("!git add . && git commit -a -m") "alias.acu" ("!git add -u && git commit -a -m") "alias.c" ("commit --verbose") "alias.ca" ("commit -a --verbose") "alias.cm" ("commit -m") "alias.cam" ("commit -a -m") "alias.m" ("commit --amend --verbose") "alias.d" ("diff") "alias.ds" ("diff --stat -r") "alias.dch" ("diff --name-status -r") "alias.dca" ("diff --cached") "alias.s" ("status -s") "alias.co" ("checkout") "alias.cob" ("checkout -b") "alias.cl" ("clone") "alias.undo" ("reset --hard") "alias.pushitgood" ("!echo -e 'Ah, push it..
' && git push -u origin --all && echo -e '
P-push it real good'") "alias.cleanmerged" ("!git branch --merged | grep -v \"\\*\" | xargs -n 1 git branch -d") "alias.l" ("log --pretty=format:%C(red)%h\\ %ad%C(yellow)%d\\ %Creset%s --decorate --date=short") "alias.ll" ("log --pretty=format:%C(red)%h\\ %ad%Cyellow%d\\ %Creset%s%Cblue\\ [%cn] --decorate --date=short") "alias.hist" ("log --graph --pretty=format:'%Cred%h%Creset	 - %s %C(yellow)%d%Creset' --abbrev-commit --date=relative") "alias.histt" ("log --graph --pretty=format:'%Cred%h%Creset	 - %s %Cgreen(%cr) %C(yellow)%d%Creset' --abbrev-commit --date=relative") "alias.hista" ("log --graph --pretty=format:'%Cred%h%Creset	 - %s %Cgreen(%cr) %C(bold blue)<%an>%Creset %C(yellow)%d%Creset' --abbrev-commit --date=relative") "alias.tree" ("log --oneline --decorate --graph") "alias.fine" ("log --decorate --pretty=format:'(%C(yellow)%h %Creset -> %C(blue) %p%Creset) %Cgreen%cr%Creset %n  %C(white)\"%s\"%Creset%n' --graph --topo-order") "alias.new" ("!sh -c 'git log $1@{1}..$1@{0} $@'") "alias.whois" ("!sh -c 'git log -i -1 --pretty=\"format:%an <%ae>
\" --author=\"$1\"' -") "alias.whatis" ("show -s --pretty='tformat:%h (%s, %ad)' --date=short") "alias.bb" ("!git for-each-ref --sort='-authordate' --format='%(authordate)%09%(objectname:short)%09%(refname)' refs/heads | sed -e 's-refs/heads/--'") "alias.la" ("!git config -l | grep alias | cut -c 7-") "alias.deleted" ("log --diff-filter=D --summary") "cola.tabwidth" ("4") "cola.linebreak" ("false") "cola.boldheaders" ("true") "gui.editor" ("emacsclient -c") "diff.tool" ("meld") "merge.tool" ("meld") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "core.preloadindex" ("true") "log.showsignature" ("false")))) (("/home/arubu/Workspace/Projet/" . magit-toplevel) . "/home/arubu/Workspace/Projet/") (("~/Workspace/Projet/" . magit-toplevel) . "/home/arubu/Workspace/Projet/") (("/home/arubu/Workspace/Projet/" "rev-parse" "--show-cdup") . "") (("/home/arubu/Workspace/Projet/" "rev-parse" "--show-toplevel") . "/home/arubu/Workspace/Projet") (("~/" . magit-toplevel)) (("/home/arubu/" "rev-parse" "--git-dir")) (("/home/arubu/" "rev-parse" "--show-toplevel")))) (text-mode) (find-file "~/Workspace/resume.cs" t) (kill-buffer "ar.txt") (find-file "/home/arubu/Workspace/ar.txt" t) (magit-status "~/Workspace/Projet/" '((46 . 27) (("/home/arubu/Workspace/Projet/" "rev-parse" "--short" "HEAD~") . "f37b37a") (("/home/arubu/Workspace/Projet/" "rev-parse" "--short" "HEAD") . "0e32f18") (("/home/arubu/Workspace/Projet/" "rev-parse" "--verify" "HEAD~10") . "af233ea7c7378ba15bff0c730b9cc726ddcaed73") (("/home/arubu/Workspace/Projet/" "rev-parse" "@{upstream}")) (("/home/arubu/Workspace/Projet/" "rev-parse" "--verify" "refs/stash")) (("/home/arubu/Workspace/Projet/" "rev-parse" "--is-bare-repository") . "false
") (("/home/arubu/Workspace/Projet/" magit-git-dir "BISECT_LOG") . "/home/arubu/Workspace/Projet/.git/BISECT_LOG") (("/home/arubu/Workspace/Projet/" magit-git-dir "REVERT_HEAD") . "/home/arubu/Workspace/Projet/.git/REVERT_HEAD") (("/home/arubu/Workspace/Projet/" magit-git-dir "CHERRY_PICK_HEAD") . "/home/arubu/Workspace/Projet/.git/CHERRY_PICK_HEAD") (("/home/arubu/Workspace/Projet/" magit-git-dir "rebase-apply/applying") . "/home/arubu/Workspace/Projet/.git/rebase-apply/applying") (("/home/arubu/Workspace/Projet/" magit-git-dir "rebase-apply/onto") . "/home/arubu/Workspace/Projet/.git/rebase-apply/onto") (("/home/arubu/Workspace/Projet/" magit-git-dir "rebase-merge") . "/home/arubu/Workspace/Projet/.git/rebase-merge") (("/home/arubu/Workspace/Projet/" magit-git-dir "MERGE_HEAD") . "/home/arubu/Workspace/Projet/.git/MERGE_HEAD") (("/home/arubu/Workspace/Projet/" "rev-parse" "--git-dir") . ".git") (("/home/arubu/Workspace/Projet/" "describe" "--contains" "HEAD")) (("/home/arubu/Workspace/Projet/" "describe" "--long" "--tags") . "newlook-4-g0e32f18") (("/home/arubu/Workspace/Projet/" "show" "--no-patch" "--format=%h %s" "master^{commit}" "--") . "0e32f18 resize AttTravailView to a suitable A4 compatible size") (("/home/arubu/Workspace/Projet/" "symbolic-ref" "--short" "HEAD") . "master") (("/home/arubu/Workspace/Projet/" "rev-parse" "--verify" "HEAD") . "0e32f1882ca7611dd3410200a627dbbf87838b41") (("/home/arubu/Workspace/Projet/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8 data ("git.name" ("Anas Rchid") "git.email" ("rchid.anas@gmail.com") "user.name" ("Anas Rchid") "user.email" ("rchid.anas@gmail.com") "alias.a" ("add") "alias.ap" ("add -p") "alias.ac" ("!git add . && git commit -a -m") "alias.acu" ("!git add -u && git commit -a -m") "alias.c" ("commit --verbose") "alias.ca" ("commit -a --verbose") "alias.cm" ("commit -m") "alias.cam" ("commit -a -m") "alias.m" ("commit --amend --verbose") "alias.d" ("diff") "alias.ds" ("diff --stat -r") "alias.dch" ("diff --name-status -r") "alias.dca" ("diff --cached") "alias.s" ("status -s") "alias.co" ("checkout") "alias.cob" ("checkout -b") "alias.cl" ("clone") "alias.undo" ("reset --hard") "alias.pushitgood" ("!echo -e 'Ah, push it..
' && git push -u origin --all && echo -e '
P-push it real good'") "alias.cleanmerged" ("!git branch --merged | grep -v \"\\*\" | xargs -n 1 git branch -d") "alias.l" ("log --pretty=format:%C(red)%h\\ %ad%C(yellow)%d\\ %Creset%s --decorate --date=short") "alias.ll" ("log --pretty=format:%C(red)%h\\ %ad%Cyellow%d\\ %Creset%s%Cblue\\ [%cn] --decorate --date=short") "alias.hist" ("log --graph --pretty=format:'%Cred%h%Creset	 - %s %C(yellow)%d%Creset' --abbrev-commit --date=relative") "alias.histt" ("log --graph --pretty=format:'%Cred%h%Creset	 - %s %Cgreen(%cr) %C(yellow)%d%Creset' --abbrev-commit --date=relative") "alias.hista" ("log --graph --pretty=format:'%Cred%h%Creset	 - %s %Cgreen(%cr) %C(bold blue)<%an>%Creset %C(yellow)%d%Creset' --abbrev-commit --date=relative") "alias.tree" ("log --oneline --decorate --graph") "alias.fine" ("log --decorate --pretty=format:'(%C(yellow)%h %Creset -> %C(blue) %p%Creset) %Cgreen%cr%Creset %n  %C(white)\"%s\"%Creset%n' --graph --topo-order") "alias.new" ("!sh -c 'git log $1@{1}..$1@{0} $@'") "alias.whois" ("!sh -c 'git log -i -1 --pretty=\"format:%an <%ae>
\" --author=\"$1\"' -") "alias.whatis" ("show -s --pretty='tformat:%h (%s, %ad)' --date=short") "alias.bb" ("!git for-each-ref --sort='-authordate' --format='%(authordate)%09%(objectname:short)%09%(refname)' refs/heads | sed -e 's-refs/heads/--'") "alias.la" ("!git config -l | grep alias | cut -c 7-") "alias.deleted" ("log --diff-filter=D --summary") "cola.tabwidth" ("4") "cola.linebreak" ("false") "cola.boldheaders" ("true") "gui.editor" ("emacsclient -c") "diff.tool" ("meld") "merge.tool" ("meld") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "core.preloadindex" ("true") "log.showsignature" ("false")))) (("/home/arubu/Workspace/Projet/" . magit-toplevel) . "/home/arubu/Workspace/Projet/") (("~/Workspace/Projet/" . magit-toplevel) . "/home/arubu/Workspace/Projet/") (("/home/arubu/Workspace/Projet/" "rev-parse" "--show-cdup") . "") (("/home/arubu/Workspace/Projet/" "rev-parse" "--show-toplevel") . "/home/arubu/Workspace/Projet") (("~/" . magit-toplevel)) (("/home/arubu/" "rev-parse" "--git-dir")) (("/home/arubu/" "rev-parse" "--show-toplevel")))) (find-file "~/Workspace/ar.txt" t) (langtool-check "en") (langtool-check) (magit-status "~/Workspace/Projet/" '((46 . 27) (("/home/arubu/Workspace/Projet/" "rev-parse" "--short" "HEAD~") . "52fae49") (("/home/arubu/Workspace/Projet/" "rev-parse" "--short" "HEAD") . "19aaba6") (("/home/arubu/Workspace/Projet/" "rev-parse" "--verify" "HEAD~10") . "42157da331f6788fd1c5007c3a2a1d9becb0b3dd") (("/home/arubu/Workspace/Projet/" "rev-parse" "@{upstream}")) (("/home/arubu/Workspace/Projet/" "rev-parse" "--verify" "refs/stash")) (("/home/arubu/Workspace/Projet/" "rev-parse" "--is-bare-repository") . "false
") (("/home/arubu/Workspace/Projet/" magit-git-dir "BISECT_LOG") . "/home/arubu/Workspace/Projet/.git/BISECT_LOG") (("/home/arubu/Workspace/Projet/" magit-git-dir "REVERT_HEAD") . "/home/arubu/Workspace/Projet/.git/REVERT_HEAD") (("/home/arubu/Workspace/Projet/" magit-git-dir "CHERRY_PICK_HEAD") . "/home/arubu/Workspace/Projet/.git/CHERRY_PICK_HEAD") (("/home/arubu/Workspace/Projet/" magit-git-dir "rebase-apply/applying") . "/home/arubu/Workspace/Projet/.git/rebase-apply/applying") (("/home/arubu/Workspace/Projet/" magit-git-dir "rebase-apply/onto") . "/home/arubu/Workspace/Projet/.git/rebase-apply/onto") (("/home/arubu/Workspace/Projet/" magit-git-dir "rebase-merge") . "/home/arubu/Workspace/Projet/.git/rebase-merge") (("/home/arubu/Workspace/Projet/" magit-git-dir "MERGE_HEAD") . "/home/arubu/Workspace/Projet/.git/MERGE_HEAD") (("/home/arubu/Workspace/Projet/" "rev-parse" "--git-dir") . ".git") (("/home/arubu/Workspace/Projet/" "describe" "--contains" "HEAD")) (("/home/arubu/Workspace/Projet/" "describe" "--long" "--tags") . "newlook-2-g19aaba6") (("/home/arubu/Workspace/Projet/" "show" "--no-patch" "--format=%h %s" "master^{commit}" "--") . "19aaba6 filling all classes from the XmlFile class") (("/home/arubu/Workspace/Projet/" "symbolic-ref" "--short" "HEAD") . "master") (("/home/arubu/Workspace/Projet/" "rev-parse" "--verify" "HEAD") . "19aaba60aea3f04f57c4a9094c88104edc92901c") (("/home/arubu/Workspace/Projet/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8 data ("git.name" ("Anas Rchid") "git.email" ("rchid.anas@gmail.com") "user.name" ("Anas Rchid") "user.email" ("rchid.anas@gmail.com") "alias.a" ("add") "alias.ap" ("add -p") "alias.ac" ("!git add . && git commit -a -m") "alias.acu" ("!git add -u && git commit -a -m") "alias.c" ("commit --verbose") "alias.ca" ("commit -a --verbose") "alias.cm" ("commit -m") "alias.cam" ("commit -a -m") "alias.m" ("commit --amend --verbose") "alias.d" ("diff") "alias.ds" ("diff --stat -r") "alias.dch" ("diff --name-status -r") "alias.dca" ("diff --cached") "alias.s" ("status -s") "alias.co" ("checkout") "alias.cob" ("checkout -b") "alias.cl" ("clone") "alias.undo" ("reset --hard") "alias.pushitgood" ("!echo -e 'Ah, push it..
' && git push -u origin --all && echo -e '
P-push it real good'") "alias.cleanmerged" ("!git branch --merged | grep -v \"\\*\" | xargs -n 1 git branch -d") "alias.l" ("log --pretty=format:%C(red)%h\\ %ad%C(yellow)%d\\ %Creset%s --decorate --date=short") "alias.ll" ("log --pretty=format:%C(red)%h\\ %ad%Cyellow%d\\ %Creset%s%Cblue\\ [%cn] --decorate --date=short") "alias.hist" ("log --graph --pretty=format:'%Cred%h%Creset	 - %s %C(yellow)%d%Creset' --abbrev-commit --date=relative") "alias.histt" ("log --graph --pretty=format:'%Cred%h%Creset	 - %s %Cgreen(%cr) %C(yellow)%d%Creset' --abbrev-commit --date=relative") "alias.hista" ("log --graph --pretty=format:'%Cred%h%Creset	 - %s %Cgreen(%cr) %C(bold blue)<%an>%Creset %C(yellow)%d%Creset' --abbrev-commit --date=relative") "alias.tree" ("log --oneline --decorate --graph") "alias.fine" ("log --decorate --pretty=format:'(%C(yellow)%h %Creset -> %C(blue) %p%Creset) %Cgreen%cr%Creset %n  %C(white)\"%s\"%Creset%n' --graph --topo-order") "alias.new" ("!sh -c 'git log $1@{1}..$1@{0} $@'") "alias.whois" ("!sh -c 'git log -i -1 --pretty=\"format:%an <%ae>
\" --author=\"$1\"' -") "alias.whatis" ("show -s --pretty='tformat:%h (%s, %ad)' --date=short") "alias.bb" ("!git for-each-ref --sort='-authordate' --format='%(authordate)%09%(objectname:short)%09%(refname)' refs/heads | sed -e 's-refs/heads/--'") "alias.la" ("!git config -l | grep alias | cut -c 7-") "alias.deleted" ("log --diff-filter=D --summary") "cola.tabwidth" ("4") "cola.linebreak" ("false") "cola.boldheaders" ("true") "gui.editor" ("emacsclient -c") "diff.tool" ("meld") "merge.tool" ("meld") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "core.preloadindex" ("true") "log.showsignature" ("false")))) (("/home/arubu/Workspace/Projet/" . magit-toplevel) . "/home/arubu/Workspace/Projet/") (("~/Workspace/Projet/" . magit-toplevel) . "/home/arubu/Workspace/Projet/") (("/home/arubu/Workspace/Projet/" "rev-parse" "--show-cdup") . "") (("/home/arubu/Workspace/Projet/" "rev-parse" "--show-toplevel") . "/home/arubu/Workspace/Projet") (("~/" . magit-toplevel)) (("/home/arubu/" "rev-parse" "--git-dir")) (("/home/arubu/" "rev-parse" "--show-toplevel")))) (magit-status "~/Workspace/Projet/" '((46 . 27) (("/home/arubu/Workspace/Projet/" "rev-parse" "--short" "HEAD~") . "67b0728") (("/home/arubu/Workspace/Projet/" "rev-parse" "--short" "HEAD") . "52fae49") (("/home/arubu/Workspace/Projet/" "rev-parse" "--verify" "HEAD~10") . "66fb2d3406e75d0a0708d40961ceac99b9ee97a6") (("/home/arubu/Workspace/Projet/" "rev-parse" "@{upstream}")) (("/home/arubu/Workspace/Projet/" "rev-parse" "--verify" "refs/stash")) (("/home/arubu/Workspace/Projet/" "rev-parse" "--is-bare-repository") . "false
") (("/home/arubu/Workspace/Projet/" magit-git-dir "BISECT_LOG") . "/home/arubu/Workspace/Projet/.git/BISECT_LOG") (("/home/arubu/Workspace/Projet/" magit-git-dir "REVERT_HEAD") . "/home/arubu/Workspace/Projet/.git/REVERT_HEAD") (("/home/arubu/Workspace/Projet/" magit-git-dir "CHERRY_PICK_HEAD") . "/home/arubu/Workspace/Projet/.git/CHERRY_PICK_HEAD") (("/home/arubu/Workspace/Projet/" magit-git-dir "rebase-apply/applying") . "/home/arubu/Workspace/Projet/.git/rebase-apply/applying") (("/home/arubu/Workspace/Projet/" magit-git-dir "rebase-apply/onto") . "/home/arubu/Workspace/Projet/.git/rebase-apply/onto") (("/home/arubu/Workspace/Projet/" magit-git-dir "rebase-merge") . "/home/arubu/Workspace/Projet/.git/rebase-merge") (("/home/arubu/Workspace/Projet/" magit-git-dir "MERGE_HEAD") . "/home/arubu/Workspace/Projet/.git/MERGE_HEAD") (("/home/arubu/Workspace/Projet/" "rev-parse" "--git-dir") . ".git") (("/home/arubu/Workspace/Projet/" "describe" "--contains" "HEAD")) (("/home/arubu/Workspace/Projet/" "describe" "--long" "--tags") . "newlook-1-g52fae49") (("/home/arubu/Workspace/Projet/" "show" "--no-patch" "--format=%h %s" "master^{commit}" "--") . "52fae49 fill an employee from the xml file based on its reference") (("/home/arubu/Workspace/Projet/" "symbolic-ref" "--short" "HEAD") . "master") (("/home/arubu/Workspace/Projet/" "rev-parse" "--verify" "HEAD") . "52fae496b410c9a0ac3ac006c1cd1f8dd5c17b59") (("/home/arubu/Workspace/Projet/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8 data ("git.name" ("Anas Rchid") "git.email" ("rchid.anas@gmail.com") "user.name" ("Anas Rchid") "user.email" ("rchid.anas@gmail.com") "alias.a" ("add") "alias.ap" ("add -p") "alias.ac" ("!git add . && git commit -a -m") "alias.acu" ("!git add -u && git commit -a -m") "alias.c" ("commit --verbose") "alias.ca" ("commit -a --verbose") "alias.cm" ("commit -m") "alias.cam" ("commit -a -m") "alias.m" ("commit --amend --verbose") "alias.d" ("diff") "alias.ds" ("diff --stat -r") "alias.dch" ("diff --name-status -r") "alias.dca" ("diff --cached") "alias.s" ("status -s") "alias.co" ("checkout") "alias.cob" ("checkout -b") "alias.cl" ("clone") "alias.undo" ("reset --hard") "alias.pushitgood" ("!echo -e 'Ah, push it..
' && git push -u origin --all && echo -e '
P-push it real good'") "alias.cleanmerged" ("!git branch --merged | grep -v \"\\*\" | xargs -n 1 git branch -d") "alias.l" ("log --pretty=format:%C(red)%h\\ %ad%C(yellow)%d\\ %Creset%s --decorate --date=short") "alias.ll" ("log --pretty=format:%C(red)%h\\ %ad%Cyellow%d\\ %Creset%s%Cblue\\ [%cn] --decorate --date=short") "alias.hist" ("log --graph --pretty=format:'%Cred%h%Creset	 - %s %C(yellow)%d%Creset' --abbrev-commit --date=relative") "alias.histt" ("log --graph --pretty=format:'%Cred%h%Creset	 - %s %Cgreen(%cr) %C(yellow)%d%Creset' --abbrev-commit --date=relative") "alias.hista" ("log --graph --pretty=format:'%Cred%h%Creset	 - %s %Cgreen(%cr) %C(bold blue)<%an>%Creset %C(yellow)%d%Creset' --abbrev-commit --date=relative") "alias.tree" ("log --oneline --decorate --graph") "alias.fine" ("log --decorate --pretty=format:'(%C(yellow)%h %Creset -> %C(blue) %p%Creset) %Cgreen%cr%Creset %n  %C(white)\"%s\"%Creset%n' --graph --topo-order") "alias.new" ("!sh -c 'git log $1@{1}..$1@{0} $@'") "alias.whois" ("!sh -c 'git log -i -1 --pretty=\"format:%an <%ae>
\" --author=\"$1\"' -") "alias.whatis" ("show -s --pretty='tformat:%h (%s, %ad)' --date=short") "alias.bb" ("!git for-each-ref --sort='-authordate' --format='%(authordate)%09%(objectname:short)%09%(refname)' refs/heads | sed -e 's-refs/heads/--'") "alias.la" ("!git config -l | grep alias | cut -c 7-") "alias.deleted" ("log --diff-filter=D --summary") "cola.tabwidth" ("4") "cola.linebreak" ("false") "cola.boldheaders" ("true") "gui.editor" ("emacsclient -c") "diff.tool" ("meld") "merge.tool" ("meld") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "core.preloadindex" ("true") "log.showsignature" ("false")))) (("/home/arubu/Workspace/Projet/" . magit-toplevel) . "/home/arubu/Workspace/Projet/") (("~/Workspace/Projet/" . magit-toplevel) . "/home/arubu/Workspace/Projet/") (("/home/arubu/Workspace/Projet/" "rev-parse" "--show-cdup") . "") (("/home/arubu/Workspace/Projet/" "rev-parse" "--show-toplevel") . "/home/arubu/Workspace/Projet") (("~/" . magit-toplevel)) (("/home/arubu/" "rev-parse" "--git-dir")) (("/home/arubu/" "rev-parse" "--show-toplevel")))) (magit-status "~/Workspace/Projet/" '((46 . 27) (("/home/arubu/Workspace/Projet/" "rev-parse" "--short" "HEAD~") . "67b0728") (("/home/arubu/Workspace/Projet/" "rev-parse" "--short" "HEAD") . "a9cded4") (("/home/arubu/Workspace/Projet/" "rev-parse" "--verify" "HEAD~10") . "66fb2d3406e75d0a0708d40961ceac99b9ee97a6") (("/home/arubu/Workspace/Projet/" "rev-parse" "@{upstream}")) (("/home/arubu/Workspace/Projet/" "rev-parse" "--verify" "refs/stash")) (("/home/arubu/Workspace/Projet/" "rev-parse" "--is-bare-repository") . "false
") (("/home/arubu/Workspace/Projet/" magit-git-dir "BISECT_LOG") . "/home/arubu/Workspace/Projet/.git/BISECT_LOG") (("/home/arubu/Workspace/Projet/" magit-git-dir "REVERT_HEAD") . "/home/arubu/Workspace/Projet/.git/REVERT_HEAD") (("/home/arubu/Workspace/Projet/" magit-git-dir "CHERRY_PICK_HEAD") . "/home/arubu/Workspace/Projet/.git/CHERRY_PICK_HEAD") (("/home/arubu/Workspace/Projet/" magit-git-dir "rebase-apply/applying") . "/home/arubu/Workspace/Projet/.git/rebase-apply/applying") (("/home/arubu/Workspace/Projet/" magit-git-dir "rebase-apply/onto") . "/home/arubu/Workspace/Projet/.git/rebase-apply/onto") (("/home/arubu/Workspace/Projet/" magit-git-dir "rebase-merge") . "/home/arubu/Workspace/Projet/.git/rebase-merge") (("/home/arubu/Workspace/Projet/" magit-git-dir "MERGE_HEAD") . "/home/arubu/Workspace/Projet/.git/MERGE_HEAD") (("/home/arubu/Workspace/Projet/" "rev-parse" "--git-dir") . ".git") (("/home/arubu/Workspace/Projet/" "describe" "--contains" "HEAD")) (("/home/arubu/Workspace/Projet/" "describe" "--long" "--tags") . "newlook-1-ga9cded4") (("/home/arubu/Workspace/Projet/" "show" "--no-patch" "--format=%h %s" "master^{commit}" "--") . "a9cded4 fill an employee from the xml file based on itsreference") (("/home/arubu/Workspace/Projet/" "symbolic-ref" "--short" "HEAD") . "master") (("/home/arubu/Workspace/Projet/" "rev-parse" "--verify" "HEAD") . "a9cded4af9efe15e6c5d9b7c219938dc69ab4baa") (("/home/arubu/Workspace/Projet/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8 data ("git.name" ("Anas Rchid") "git.email" ("rchid.anas@gmail.com") "user.name" ("Anas Rchid") "user.email" ("rchid.anas@gmail.com") "alias.a" ("add") "alias.ap" ("add -p") "alias.ac" ("!git add . && git commit -a -m") "alias.acu" ("!git add -u && git commit -a -m") "alias.c" ("commit --verbose") "alias.ca" ("commit -a --verbose") "alias.cm" ("commit -m") "alias.cam" ("commit -a -m") "alias.m" ("commit --amend --verbose") "alias.d" ("diff") "alias.ds" ("diff --stat -r") "alias.dch" ("diff --name-status -r") "alias.dca" ("diff --cached") "alias.s" ("status -s") "alias.co" ("checkout") "alias.cob" ("checkout -b") "alias.cl" ("clone") "alias.undo" ("reset --hard") "alias.pushitgood" ("!echo -e 'Ah, push it..
' && git push -u origin --all && echo -e '
P-push it real good'") "alias.cleanmerged" ("!git branch --merged | grep -v \"\\*\" | xargs -n 1 git branch -d") "alias.l" ("log --pretty=format:%C(red)%h\\ %ad%C(yellow)%d\\ %Creset%s --decorate --date=short") "alias.ll" ("log --pretty=format:%C(red)%h\\ %ad%Cyellow%d\\ %Creset%s%Cblue\\ [%cn] --decorate --date=short") "alias.hist" ("log --graph --pretty=format:'%Cred%h%Creset	 - %s %C(yellow)%d%Creset' --abbrev-commit --date=relative") "alias.histt" ("log --graph --pretty=format:'%Cred%h%Creset	 - %s %Cgreen(%cr) %C(yellow)%d%Creset' --abbrev-commit --date=relative") "alias.hista" ("log --graph --pretty=format:'%Cred%h%Creset	 - %s %Cgreen(%cr) %C(bold blue)<%an>%Creset %C(yellow)%d%Creset' --abbrev-commit --date=relative") "alias.tree" ("log --oneline --decorate --graph") "alias.fine" ("log --decorate --pretty=format:'(%C(yellow)%h %Creset -> %C(blue) %p%Creset) %Cgreen%cr%Creset %n  %C(white)\"%s\"%Creset%n' --graph --topo-order") "alias.new" ("!sh -c 'git log $1@{1}..$1@{0} $@'") "alias.whois" ("!sh -c 'git log -i -1 --pretty=\"format:%an <%ae>
\" --author=\"$1\"' -") "alias.whatis" ("show -s --pretty='tformat:%h (%s, %ad)' --date=short") "alias.bb" ("!git for-each-ref --sort='-authordate' --format='%(authordate)%09%(objectname:short)%09%(refname)' refs/heads | sed -e 's-refs/heads/--'") "alias.la" ("!git config -l | grep alias | cut -c 7-") "alias.deleted" ("log --diff-filter=D --summary") "cola.tabwidth" ("4") "cola.linebreak" ("false") "cola.boldheaders" ("true") "gui.editor" ("emacsclient -c") "diff.tool" ("meld") "merge.tool" ("meld") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "core.preloadindex" ("true") "log.showsignature" ("false")))) (("/home/arubu/Workspace/Projet/" . magit-toplevel) . "/home/arubu/Workspace/Projet/") (("~/Workspace/Projet/" . magit-toplevel) . "/home/arubu/Workspace/Projet/") (("/home/arubu/Workspace/Projet/" "rev-parse" "--show-cdup") . "") (("/home/arubu/Workspace/Projet/" "rev-parse" "--show-toplevel") . "/home/arubu/Workspace/Projet") (("~/" . magit-toplevel)) (("/home/arubu/" "rev-parse" "--git-dir")) (("/home/arubu/" "rev-parse" "--show-toplevel")))) (find-file "~/Workspace/complex.c" t) (find-file "~/Workspace/file.h" t) (find-file "~/Workspace/int.s" t) (kill-buffer "int.s") (find-file "~/Workspace/int.s" t) (find-file "~/Workspace/int.c" t) (find-file "~/Workspace/syntax.s" t) (diff "~/Workspace/syntax.c" "~/Workspace/syntax.i" nil) (find-file-other-frame "~/Workspace/syntax.i" t) (find-file "~/Workspace/" t) (pwd nil) (find-file "~/Workspace/syntax.c" t) (switch-to-buffer-other-frame "bar.c") (find-file "~/Downloads/Telegram Desktop/count.py" t) (find-file "~/Workspace/bar.c" t) (magit-status "~/Workspace/Projet/" '((46 . 27) (("/home/arubu/Workspace/Projet/" "rev-parse" "--short" "HEAD~") . "67b0728") (("/home/arubu/Workspace/Projet/" "rev-parse" "--short" "HEAD") . "a9cded4") (("/home/arubu/Workspace/Projet/" "rev-parse" "--verify" "HEAD~10") . "66fb2d3406e75d0a0708d40961ceac99b9ee97a6") (("/home/arubu/Workspace/Projet/" "rev-parse" "@{upstream}")) (("/home/arubu/Workspace/Projet/" "rev-parse" "--verify" "refs/stash")) (("/home/arubu/Workspace/Projet/" "rev-parse" "--is-bare-repository") . "false
") (("/home/arubu/Workspace/Projet/" magit-git-dir "BISECT_LOG") . "/home/arubu/Workspace/Projet/.git/BISECT_LOG") (("/home/arubu/Workspace/Projet/" magit-git-dir "REVERT_HEAD") . "/home/arubu/Workspace/Projet/.git/REVERT_HEAD") (("/home/arubu/Workspace/Projet/" magit-git-dir "CHERRY_PICK_HEAD") . "/home/arubu/Workspace/Projet/.git/CHERRY_PICK_HEAD") (("/home/arubu/Workspace/Projet/" magit-git-dir "rebase-apply/applying") . "/home/arubu/Workspace/Projet/.git/rebase-apply/applying") (("/home/arubu/Workspace/Projet/" magit-git-dir "rebase-apply/onto") . "/home/arubu/Workspace/Projet/.git/rebase-apply/onto") (("/home/arubu/Workspace/Projet/" magit-git-dir "rebase-merge") . "/home/arubu/Workspace/Projet/.git/rebase-merge") (("/home/arubu/Workspace/Projet/" magit-git-dir "MERGE_HEAD") . "/home/arubu/Workspace/Projet/.git/MERGE_HEAD") (("/home/arubu/Workspace/Projet/" "rev-parse" "--git-dir") . ".git") (("/home/arubu/Workspace/Projet/" "describe" "--contains" "HEAD")) (("/home/arubu/Workspace/Projet/" "describe" "--long" "--tags") . "newlook-1-ga9cded4") (("/home/arubu/Workspace/Projet/" "show" "--no-patch" "--format=%h %s" "master^{commit}" "--") . "a9cded4 fill an employee from the xml file based on itsreference") (("/home/arubu/Workspace/Projet/" "symbolic-ref" "--short" "HEAD") . "master") (("/home/arubu/Workspace/Projet/" "rev-parse" "--verify" "HEAD") . "a9cded4af9efe15e6c5d9b7c219938dc69ab4baa") (("/home/arubu/Workspace/Projet/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8 data ("git.name" ("Anas Rchid") "git.email" ("rchid.anas@gmail.com") "user.name" ("Anas Rchid") "user.email" ("rchid.anas@gmail.com") "alias.a" ("add") "alias.ap" ("add -p") "alias.ac" ("!git add . && git commit -a -m") "alias.acu" ("!git add -u && git commit -a -m") "alias.c" ("commit --verbose") "alias.ca" ("commit -a --verbose") "alias.cm" ("commit -m") "alias.cam" ("commit -a -m") "alias.m" ("commit --amend --verbose") "alias.d" ("diff") "alias.ds" ("diff --stat -r") "alias.dch" ("diff --name-status -r") "alias.dca" ("diff --cached") "alias.s" ("status -s") "alias.co" ("checkout") "alias.cob" ("checkout -b") "alias.cl" ("clone") "alias.undo" ("reset --hard") "alias.pushitgood" ("!echo -e 'Ah, push it..
' && git push -u origin --all && echo -e '
P-push it real good'") "alias.cleanmerged" ("!git branch --merged | grep -v \"\\*\" | xargs -n 1 git branch -d") "alias.l" ("log --pretty=format:%C(red)%h\\ %ad%C(yellow)%d\\ %Creset%s --decorate --date=short") "alias.ll" ("log --pretty=format:%C(red)%h\\ %ad%Cyellow%d\\ %Creset%s%Cblue\\ [%cn] --decorate --date=short") "alias.hist" ("log --graph --pretty=format:'%Cred%h%Creset	 - %s %C(yellow)%d%Creset' --abbrev-commit --date=relative") "alias.histt" ("log --graph --pretty=format:'%Cred%h%Creset	 - %s %Cgreen(%cr) %C(yellow)%d%Creset' --abbrev-commit --date=relative") "alias.hista" ("log --graph --pretty=format:'%Cred%h%Creset	 - %s %Cgreen(%cr) %C(bold blue)<%an>%Creset %C(yellow)%d%Creset' --abbrev-commit --date=relative") "alias.tree" ("log --oneline --decorate --graph") "alias.fine" ("log --decorate --pretty=format:'(%C(yellow)%h %Creset -> %C(blue) %p%Creset) %Cgreen%cr%Creset %n  %C(white)\"%s\"%Creset%n' --graph --topo-order") "alias.new" ("!sh -c 'git log $1@{1}..$1@{0} $@'") "alias.whois" ("!sh -c 'git log -i -1 --pretty=\"format:%an <%ae>
\" --author=\"$1\"' -") "alias.whatis" ("show -s --pretty='tformat:%h (%s, %ad)' --date=short") "alias.bb" ("!git for-each-ref --sort='-authordate' --format='%(authordate)%09%(objectname:short)%09%(refname)' refs/heads | sed -e 's-refs/heads/--'") "alias.la" ("!git config -l | grep alias | cut -c 7-") "alias.deleted" ("log --diff-filter=D --summary") "cola.tabwidth" ("4") "cola.linebreak" ("false") "cola.boldheaders" ("true") "gui.editor" ("emacsclient -c") "diff.tool" ("meld") "merge.tool" ("meld") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "core.preloadindex" ("true") "log.showsignature" ("false")))) (("/home/arubu/Workspace/Projet/" . magit-toplevel) . "/home/arubu/Workspace/Projet/") (("~/Workspace/Projet/" . magit-toplevel) . "/home/arubu/Workspace/Projet/") (("/home/arubu/Workspace/Projet/" "rev-parse" "--show-cdup") . "") (("/home/arubu/Workspace/Projet/" "rev-parse" "--show-toplevel") . "/home/arubu/Workspace/Projet") (("~/" . magit-toplevel)) (("/home/arubu/" "rev-parse" "--git-dir")) (("/home/arubu/" "rev-parse" "--show-toplevel")))) (find-file "~/Workspace/Projet/GH-FLSHJ/data/xml/hr.xml" t) (find-file "~/Workspace/Projet/README.org" t) (switch-to-buffer "hr.xml" nil 'force-same-window) (find-file "~/Workspace/Projet/GH-FLSHJ/data/xml/hr.xml" t) (magit-tag "newlook" "master" nil) (magit-tag-delete "new_look") (magit-tag "new_look" "master" nil) (magit-status "~/Workspace/Projet/" '((46 . 27) (("/home/arubu/Workspace/Projet/" "rev-parse" "--short" "HEAD~") . "a640f44") (("/home/arubu/Workspace/Projet/" "rev-parse" "--short" "HEAD") . "bcba992") (("/home/arubu/Workspace/Projet/" "rev-parse" "--verify" "HEAD~10") . "2ada9b85103ad2942355740b2011f43cbcbc8ffa") (("/home/arubu/Workspace/Projet/" "rev-parse" "@{upstream}")) (("/home/arubu/Workspace/Projet/" "rev-parse" "--verify" "refs/stash")) (("/home/arubu/Workspace/Projet/" "rev-parse" "--is-bare-repository") . "false
") (("/home/arubu/Workspace/Projet/" magit-git-dir "BISECT_LOG") . "/home/arubu/Workspace/Projet/.git/BISECT_LOG") (("/home/arubu/Workspace/Projet/" magit-git-dir "REVERT_HEAD") . "/home/arubu/Workspace/Projet/.git/REVERT_HEAD") (("/home/arubu/Workspace/Projet/" magit-git-dir "CHERRY_PICK_HEAD") . "/home/arubu/Workspace/Projet/.git/CHERRY_PICK_HEAD") (("/home/arubu/Workspace/Projet/" magit-git-dir "rebase-apply/applying") . "/home/arubu/Workspace/Projet/.git/rebase-apply/applying") (("/home/arubu/Workspace/Projet/" magit-git-dir "rebase-apply/onto") . "/home/arubu/Workspace/Projet/.git/rebase-apply/onto") (("/home/arubu/Workspace/Projet/" magit-git-dir "rebase-merge") . "/home/arubu/Workspace/Projet/.git/rebase-merge") (("/home/arubu/Workspace/Projet/" magit-git-dir "MERGE_HEAD") . "/home/arubu/Workspace/Projet/.git/MERGE_HEAD") (("/home/arubu/Workspace/Projet/" "rev-parse" "--git-dir") . ".git") (("/home/arubu/Workspace/Projet/" "describe" "--contains" "HEAD")) (("/home/arubu/Workspace/Projet/" "describe" "--long" "--tags")) (("/home/arubu/Workspace/Projet/" "show" "--no-patch" "--format=%h %s" "master^{commit}" "--") . "bcba992 show column names on each JTable") (("/home/arubu/Workspace/Projet/" "symbolic-ref" "--short" "HEAD") . "master") (("/home/arubu/Workspace/Projet/" "rev-parse" "--verify" "HEAD") . "bcba9929174c36179922f2c2f361d1a20260ff0d") (("/home/arubu/Workspace/Projet/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8 data ("git.name" ("Anas Rchid") "git.email" ("rchid.anas@gmail.com") "user.name" ("Anas Rchid") "user.email" ("rchid.anas@gmail.com") "alias.a" ("add") "alias.ap" ("add -p") "alias.ac" ("!git add . && git commit -a -m") "alias.acu" ("!git add -u && git commit -a -m") "alias.c" ("commit --verbose") "alias.ca" ("commit -a --verbose") "alias.cm" ("commit -m") "alias.cam" ("commit -a -m") "alias.m" ("commit --amend --verbose") "alias.d" ("diff") "alias.ds" ("diff --stat -r") "alias.dch" ("diff --name-status -r") "alias.dca" ("diff --cached") "alias.s" ("status -s") "alias.co" ("checkout") "alias.cob" ("checkout -b") "alias.cl" ("clone") "alias.undo" ("reset --hard") "alias.pushitgood" ("!echo -e 'Ah, push it..
' && git push -u origin --all && echo -e '
P-push it real good'") "alias.cleanmerged" ("!git branch --merged | grep -v \"\\*\" | xargs -n 1 git branch -d") "alias.l" ("log --pretty=format:%C(red)%h\\ %ad%C(yellow)%d\\ %Creset%s --decorate --date=short") "alias.ll" ("log --pretty=format:%C(red)%h\\ %ad%Cyellow%d\\ %Creset%s%Cblue\\ [%cn] --decorate --date=short") "alias.hist" ("log --graph --pretty=format:'%Cred%h%Creset	 - %s %C(yellow)%d%Creset' --abbrev-commit --date=relative") "alias.histt" ("log --graph --pretty=format:'%Cred%h%Creset	 - %s %Cgreen(%cr) %C(yellow)%d%Creset' --abbrev-commit --date=relative") "alias.hista" ("log --graph --pretty=format:'%Cred%h%Creset	 - %s %Cgreen(%cr) %C(bold blue)<%an>%Creset %C(yellow)%d%Creset' --abbrev-commit --date=relative") "alias.tree" ("log --oneline --decorate --graph") "alias.fine" ("log --decorate --pretty=format:'(%C(yellow)%h %Creset -> %C(blue) %p%Creset) %Cgreen%cr%Creset %n  %C(white)\"%s\"%Creset%n' --graph --topo-order") "alias.new" ("!sh -c 'git log $1@{1}..$1@{0} $@'") "alias.whois" ("!sh -c 'git log -i -1 --pretty=\"format:%an <%ae>
\" --author=\"$1\"' -") "alias.whatis" ("show -s --pretty='tformat:%h (%s, %ad)' --date=short") "alias.bb" ("!git for-each-ref --sort='-authordate' --format='%(authordate)%09%(objectname:short)%09%(refname)' refs/heads | sed -e 's-refs/heads/--'") "alias.la" ("!git config -l | grep alias | cut -c 7-") "alias.deleted" ("log --diff-filter=D --summary") "cola.tabwidth" ("4") "cola.linebreak" ("false") "cola.boldheaders" ("true") "gui.editor" ("emacsclient -c") "diff.tool" ("meld") "merge.tool" ("meld") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "core.preloadindex" ("true") "log.showsignature" ("false")))) (("/home/arubu/Workspace/Projet/" . magit-toplevel) . "/home/arubu/Workspace/Projet/") (("~/Workspace/Projet/" . magit-toplevel) . "/home/arubu/Workspace/Projet/") (("/home/arubu/Workspace/Projet/" "rev-parse" "--show-cdup") . "") (("/home/arubu/Workspace/Projet/" "rev-parse" "--show-toplevel") . "/home/arubu/Workspace/Projet") (("~/" . magit-toplevel)) (("/home/arubu/" "rev-parse" "--git-dir")) (("/home/arubu/" "rev-parse" "--show-toplevel")))) (kill-buffer "guitar.org") (delete-file "~/orged/agenda/guitar.org" t) (kill-buffer "Printer.java") (magit-status "~/Workspace/Projet/" '((46 . 27) (("/home/arubu/Workspace/Projet/" "rev-parse" "--short" "HEAD~") . "92b6256") (("/home/arubu/Workspace/Projet/" "rev-parse" "--short" "HEAD") . "a640f44") (("/home/arubu/Workspace/Projet/" "rev-parse" "--verify" "HEAD~10") . "cdf6b2f187227e81ad64d667afe71c280f2ff143") (("/home/arubu/Workspace/Projet/" "rev-parse" "@{upstream}")) (("/home/arubu/Workspace/Projet/" "rev-parse" "--verify" "refs/stash")) (("/home/arubu/Workspace/Projet/" "rev-parse" "--is-bare-repository") . "false
") (("/home/arubu/Workspace/Projet/" magit-git-dir "BISECT_LOG") . "/home/arubu/Workspace/Projet/.git/BISECT_LOG") (("/home/arubu/Workspace/Projet/" magit-git-dir "REVERT_HEAD") . "/home/arubu/Workspace/Projet/.git/REVERT_HEAD") (("/home/arubu/Workspace/Projet/" magit-git-dir "CHERRY_PICK_HEAD") . "/home/arubu/Workspace/Projet/.git/CHERRY_PICK_HEAD") (("/home/arubu/Workspace/Projet/" magit-git-dir "rebase-apply/applying") . "/home/arubu/Workspace/Projet/.git/rebase-apply/applying") (("/home/arubu/Workspace/Projet/" magit-git-dir "rebase-apply/onto") . "/home/arubu/Workspace/Projet/.git/rebase-apply/onto") (("/home/arubu/Workspace/Projet/" magit-git-dir "rebase-merge") . "/home/arubu/Workspace/Projet/.git/rebase-merge") (("/home/arubu/Workspace/Projet/" magit-git-dir "MERGE_HEAD") . "/home/arubu/Workspace/Projet/.git/MERGE_HEAD") (("/home/arubu/Workspace/Projet/" "rev-parse" "--git-dir") . ".git") (("/home/arubu/Workspace/Projet/" "describe" "--contains" "HEAD")) (("/home/arubu/Workspace/Projet/" "describe" "--long" "--tags")) (("/home/arubu/Workspace/Projet/" "show" "--no-patch" "--format=%h %s" "master^{commit}" "--") . "a640f44 filtering in MainWin based on Type") (("/home/arubu/Workspace/Projet/" "symbolic-ref" "--short" "HEAD") . "master") (("/home/arubu/Workspace/Projet/" "rev-parse" "--verify" "HEAD") . "a640f4493ac7762bcd675c4a1bf15cfa2796e842") (("/home/arubu/Workspace/Projet/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8 data ("git.name" ("Anas Rchid") "git.email" ("rchid.anas@gmail.com") "user.name" ("Anas Rchid") "user.email" ("rchid.anas@gmail.com") "alias.a" ("add") "alias.ap" ("add -p") "alias.ac" ("!git add . && git commit -a -m") "alias.acu" ("!git add -u && git commit -a -m") "alias.c" ("commit --verbose") "alias.ca" ("commit -a --verbose") "alias.cm" ("commit -m") "alias.cam" ("commit -a -m") "alias.m" ("commit --amend --verbose") "alias.d" ("diff") "alias.ds" ("diff --stat -r") "alias.dch" ("diff --name-status -r") "alias.dca" ("diff --cached") "alias.s" ("status -s") "alias.co" ("checkout") "alias.cob" ("checkout -b") "alias.cl" ("clone") "alias.undo" ("reset --hard") "alias.pushitgood" ("!echo -e 'Ah, push it..
' && git push -u origin --all && echo -e '
P-push it real good'") "alias.cleanmerged" ("!git branch --merged | grep -v \"\\*\" | xargs -n 1 git branch -d") "alias.l" ("log --pretty=format:%C(red)%h\\ %ad%C(yellow)%d\\ %Creset%s --decorate --date=short") "alias.ll" ("log --pretty=format:%C(red)%h\\ %ad%Cyellow%d\\ %Creset%s%Cblue\\ [%cn] --decorate --date=short") "alias.hist" ("log --graph --pretty=format:'%Cred%h%Creset	 - %s %C(yellow)%d%Creset' --abbrev-commit --date=relative") "alias.histt" ("log --graph --pretty=format:'%Cred%h%Creset	 - %s %Cgreen(%cr) %C(yellow)%d%Creset' --abbrev-commit --date=relative") "alias.hista" ("log --graph --pretty=format:'%Cred%h%Creset	 - %s %Cgreen(%cr) %C(bold blue)<%an>%Creset %C(yellow)%d%Creset' --abbrev-commit --date=relative") "alias.tree" ("log --oneline --decorate --graph") "alias.fine" ("log --decorate --pretty=format:'(%C(yellow)%h %Creset -> %C(blue) %p%Creset) %Cgreen%cr%Creset %n  %C(white)\"%s\"%Creset%n' --graph --topo-order") "alias.new" ("!sh -c 'git log $1@{1}..$1@{0} $@'") "alias.whois" ("!sh -c 'git log -i -1 --pretty=\"format:%an <%ae>
\" --author=\"$1\"' -") "alias.whatis" ("show -s --pretty='tformat:%h (%s, %ad)' --date=short") "alias.bb" ("!git for-each-ref --sort='-authordate' --format='%(authordate)%09%(objectname:short)%09%(refname)' refs/heads | sed -e 's-refs/heads/--'") "alias.la" ("!git config -l | grep alias | cut -c 7-") "alias.deleted" ("log --diff-filter=D --summary") "cola.tabwidth" ("4") "cola.linebreak" ("false") "cola.boldheaders" ("true") "gui.editor" ("emacsclient -c") "diff.tool" ("meld") "merge.tool" ("meld") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "core.preloadindex" ("true") "log.showsignature" ("false")))) (("/home/arubu/Workspace/Projet/" . magit-toplevel) . "/home/arubu/Workspace/Projet/") (("~/Workspace/Projet/" . magit-toplevel) . "/home/arubu/Workspace/Projet/") (("/home/arubu/Workspace/Projet/" "rev-parse" "--show-cdup") . "") (("/home/arubu/Workspace/Projet/" "rev-parse" "--show-toplevel") . "/home/arubu/Workspace/Projet") (("~/" . magit-toplevel)) (("/home/arubu/" "rev-parse" "--git-dir")) (("/home/arubu/" "rev-parse" "--show-toplevel")))) (find-file "~/orged/agenda/guitar.org" t) (magit-status "~/Workspace/Projet/" '((46 . 27) (("/home/arubu/Workspace/Projet/" "rev-parse" "--short" "HEAD~") . "c9ac7a8") (("/home/arubu/Workspace/Projet/" "rev-parse" "--short" "HEAD") . "92b6256") (("/home/arubu/Workspace/Projet/" "rev-parse" "--verify" "HEAD~10") . "1fbc2f0fda166939e3d890810ff2b77ca57b5569") (("/home/arubu/Workspace/Projet/" "rev-parse" "@{upstream}")) (("/home/arubu/Workspace/Projet/" "rev-parse" "--verify" "refs/stash")) (("/home/arubu/Workspace/Projet/" "rev-parse" "--is-bare-repository") . "false
") (("/home/arubu/Workspace/Projet/" magit-git-dir "BISECT_LOG") . "/home/arubu/Workspace/Projet/.git/BISECT_LOG") (("/home/arubu/Workspace/Projet/" magit-git-dir "REVERT_HEAD") . "/home/arubu/Workspace/Projet/.git/REVERT_HEAD") (("/home/arubu/Workspace/Projet/" magit-git-dir "CHERRY_PICK_HEAD") . "/home/arubu/Workspace/Projet/.git/CHERRY_PICK_HEAD") (("/home/arubu/Workspace/Projet/" magit-git-dir "rebase-apply/applying") . "/home/arubu/Workspace/Projet/.git/rebase-apply/applying") (("/home/arubu/Workspace/Projet/" magit-git-dir "rebase-apply/onto") . "/home/arubu/Workspace/Projet/.git/rebase-apply/onto") (("/home/arubu/Workspace/Projet/" magit-git-dir "rebase-merge") . "/home/arubu/Workspace/Projet/.git/rebase-merge") (("/home/arubu/Workspace/Projet/" magit-git-dir "MERGE_HEAD") . "/home/arubu/Workspace/Projet/.git/MERGE_HEAD") (("/home/arubu/Workspace/Projet/" "rev-parse" "--git-dir") . ".git") (("/home/arubu/Workspace/Projet/" "describe" "--contains" "HEAD")) (("/home/arubu/Workspace/Projet/" "describe" "--long" "--tags")) (("/home/arubu/Workspace/Projet/" "show" "--no-patch" "--format=%h %s" "master^{commit}" "--") . "92b6256 import from \"hr.xml\" to JTable in MainWin") (("/home/arubu/Workspace/Projet/" "symbolic-ref" "--short" "HEAD") . "master") (("/home/arubu/Workspace/Projet/" "rev-parse" "--verify" "HEAD") . "92b6256eaa008fae48644750fb9633ad39ca45ec") (("/home/arubu/Workspace/Projet/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8 data ("git.name" ("Anas Rchid") "git.email" ("rchid.anas@gmail.com") "user.name" ("Anas Rchid") "user.email" ("rchid.anas@gmail.com") "alias.a" ("add") "alias.ap" ("add -p") "alias.ac" ("!git add . && git commit -a -m") "alias.acu" ("!git add -u && git commit -a -m") "alias.c" ("commit --verbose") "alias.ca" ("commit -a --verbose") "alias.cm" ("commit -m") "alias.cam" ("commit -a -m") "alias.m" ("commit --amend --verbose") "alias.d" ("diff") "alias.ds" ("diff --stat -r") "alias.dch" ("diff --name-status -r") "alias.dca" ("diff --cached") "alias.s" ("status -s") "alias.co" ("checkout") "alias.cob" ("checkout -b") "alias.cl" ("clone") "alias.undo" ("reset --hard") "alias.pushitgood" ("!echo -e 'Ah, push it..
' && git push -u origin --all && echo -e '
P-push it real good'") "alias.cleanmerged" ("!git branch --merged | grep -v \"\\*\" | xargs -n 1 git branch -d") "alias.l" ("log --pretty=format:%C(red)%h\\ %ad%C(yellow)%d\\ %Creset%s --decorate --date=short") "alias.ll" ("log --pretty=format:%C(red)%h\\ %ad%Cyellow%d\\ %Creset%s%Cblue\\ [%cn] --decorate --date=short") "alias.hist" ("log --graph --pretty=format:'%Cred%h%Creset	 - %s %C(yellow)%d%Creset' --abbrev-commit --date=relative") "alias.histt" ("log --graph --pretty=format:'%Cred%h%Creset	 - %s %Cgreen(%cr) %C(yellow)%d%Creset' --abbrev-commit --date=relative") "alias.hista" ("log --graph --pretty=format:'%Cred%h%Creset	 - %s %Cgreen(%cr) %C(bold blue)<%an>%Creset %C(yellow)%d%Creset' --abbrev-commit --date=relative") "alias.tree" ("log --oneline --decorate --graph") "alias.fine" ("log --decorate --pretty=format:'(%C(yellow)%h %Creset -> %C(blue) %p%Creset) %Cgreen%cr%Creset %n  %C(white)\"%s\"%Creset%n' --graph --topo-order") "alias.new" ("!sh -c 'git log $1@{1}..$1@{0} $@'") "alias.whois" ("!sh -c 'git log -i -1 --pretty=\"format:%an <%ae>
\" --author=\"$1\"' -") "alias.whatis" ("show -s --pretty='tformat:%h (%s, %ad)' --date=short") "alias.bb" ("!git for-each-ref --sort='-authordate' --format='%(authordate)%09%(objectname:short)%09%(refname)' refs/heads | sed -e 's-refs/heads/--'") "alias.la" ("!git config -l | grep alias | cut -c 7-") "alias.deleted" ("log --diff-filter=D --summary") "cola.tabwidth" ("4") "cola.linebreak" ("false") "cola.boldheaders" ("true") "gui.editor" ("emacsclient -c") "diff.tool" ("meld") "merge.tool" ("meld") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "core.preloadindex" ("true") "log.showsignature" ("false")))) (("/home/arubu/Workspace/Projet/" . magit-toplevel) . "/home/arubu/Workspace/Projet/") (("~/Workspace/Projet/" . magit-toplevel) . "/home/arubu/Workspace/Projet/") (("/home/arubu/Workspace/Projet/" "rev-parse" "--show-cdup") . "") (("/home/arubu/Workspace/Projet/" "rev-parse" "--show-toplevel") . "/home/arubu/Workspace/Projet") (("~/" . magit-toplevel)) (("/home/arubu/" "rev-parse" "--git-dir")) (("/home/arubu/" "rev-parse" "--show-toplevel")))) (find-file "~/Workspace/Projet/GH-FLSHJ/data/xml/hr.xml" t) (kill-buffer "main.xml") (find-file "~/Workspace/Projet/GH-FLSHJ/data/xml/main.xml" t) (find-file "~/Workspace/Projet/GH-FLSHJ/data/xml/dep.xml" t) (magit-status "~/Workspace/Projet/" '((46 . 27) (("/home/arubu/Workspace/Projet/" "rev-parse" "--short" "HEAD~") . "c2ecc9e") (("/home/arubu/Workspace/Projet/" "rev-parse" "--short" "HEAD") . "c9ac7a8") (("/home/arubu/Workspace/Projet/" "rev-parse" "--verify" "HEAD~10") . "cef93e5b53a0e0008073d4d4057e3f71d8872d05") (("/home/arubu/Workspace/Projet/" "rev-parse" "@{upstream}")) (("/home/arubu/Workspace/Projet/" "rev-parse" "--verify" "refs/stash")) (("/home/arubu/Workspace/Projet/" "rev-parse" "--is-bare-repository") . "false
") (("/home/arubu/Workspace/Projet/" magit-git-dir "BISECT_LOG") . "/home/arubu/Workspace/Projet/.git/BISECT_LOG") (("/home/arubu/Workspace/Projet/" magit-git-dir "REVERT_HEAD") . "/home/arubu/Workspace/Projet/.git/REVERT_HEAD") (("/home/arubu/Workspace/Projet/" magit-git-dir "CHERRY_PICK_HEAD") . "/home/arubu/Workspace/Projet/.git/CHERRY_PICK_HEAD") (("/home/arubu/Workspace/Projet/" magit-git-dir "rebase-apply/applying") . "/home/arubu/Workspace/Projet/.git/rebase-apply/applying") (("/home/arubu/Workspace/Projet/" magit-git-dir "rebase-apply/onto") . "/home/arubu/Workspace/Projet/.git/rebase-apply/onto") (("/home/arubu/Workspace/Projet/" magit-git-dir "rebase-merge") . "/home/arubu/Workspace/Projet/.git/rebase-merge") (("/home/arubu/Workspace/Projet/" magit-git-dir "MERGE_HEAD") . "/home/arubu/Workspace/Projet/.git/MERGE_HEAD") (("/home/arubu/Workspace/Projet/" "rev-parse" "--git-dir") . ".git") (("/home/arubu/Workspace/Projet/" "describe" "--contains" "HEAD")) (("/home/arubu/Workspace/Projet/" "describe" "--long" "--tags")) (("/home/arubu/Workspace/Projet/" "show" "--no-patch" "--format=%h %s" "master^{commit}" "--") . "c9ac7a8 generalize the \"Attestation de Travail\" for Professor too") (("/home/arubu/Workspace/Projet/" "symbolic-ref" "--short" "HEAD") . "master") (("/home/arubu/Workspace/Projet/" "rev-parse" "--verify" "HEAD") . "c9ac7a8903ef2ccd021e2b9de99d4b6bbbd5531e") (("/home/arubu/Workspace/Projet/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8 data ("git.name" ("Anas Rchid") "git.email" ("rchid.anas@gmail.com") "user.name" ("Anas Rchid") "user.email" ("rchid.anas@gmail.com") "alias.a" ("add") "alias.ap" ("add -p") "alias.ac" ("!git add . && git commit -a -m") "alias.acu" ("!git add -u && git commit -a -m") "alias.c" ("commit --verbose") "alias.ca" ("commit -a --verbose") "alias.cm" ("commit -m") "alias.cam" ("commit -a -m") "alias.m" ("commit --amend --verbose") "alias.d" ("diff") "alias.ds" ("diff --stat -r") "alias.dch" ("diff --name-status -r") "alias.dca" ("diff --cached") "alias.s" ("status -s") "alias.co" ("checkout") "alias.cob" ("checkout -b") "alias.cl" ("clone") "alias.undo" ("reset --hard") "alias.pushitgood" ("!echo -e 'Ah, push it..
' && git push -u origin --all && echo -e '
P-push it real good'") "alias.cleanmerged" ("!git branch --merged | grep -v \"\\*\" | xargs -n 1 git branch -d") "alias.l" ("log --pretty=format:%C(red)%h\\ %ad%C(yellow)%d\\ %Creset%s --decorate --date=short") "alias.ll" ("log --pretty=format:%C(red)%h\\ %ad%Cyellow%d\\ %Creset%s%Cblue\\ [%cn] --decorate --date=short") "alias.hist" ("log --graph --pretty=format:'%Cred%h%Creset	 - %s %C(yellow)%d%Creset' --abbrev-commit --date=relative") "alias.histt" ("log --graph --pretty=format:'%Cred%h%Creset	 - %s %Cgreen(%cr) %C(yellow)%d%Creset' --abbrev-commit --date=relative") "alias.hista" ("log --graph --pretty=format:'%Cred%h%Creset	 - %s %Cgreen(%cr) %C(bold blue)<%an>%Creset %C(yellow)%d%Creset' --abbrev-commit --date=relative") "alias.tree" ("log --oneline --decorate --graph") "alias.fine" ("log --decorate --pretty=format:'(%C(yellow)%h %Creset -> %C(blue) %p%Creset) %Cgreen%cr%Creset %n  %C(white)\"%s\"%Creset%n' --graph --topo-order") "alias.new" ("!sh -c 'git log $1@{1}..$1@{0} $@'") "alias.whois" ("!sh -c 'git log -i -1 --pretty=\"format:%an <%ae>
\" --author=\"$1\"' -") "alias.whatis" ("show -s --pretty='tformat:%h (%s, %ad)' --date=short") "alias.bb" ("!git for-each-ref --sort='-authordate' --format='%(authordate)%09%(objectname:short)%09%(refname)' refs/heads | sed -e 's-refs/heads/--'") "alias.la" ("!git config -l | grep alias | cut -c 7-") "alias.deleted" ("log --diff-filter=D --summary") "cola.tabwidth" ("4") "cola.linebreak" ("false") "cola.boldheaders" ("true") "gui.editor" ("emacsclient -c") "diff.tool" ("meld") "merge.tool" ("meld") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "core.preloadindex" ("true") "log.showsignature" ("false")))) (("/home/arubu/Workspace/Projet/" . magit-toplevel) . "/home/arubu/Workspace/Projet/") (("~/Workspace/Projet/" . magit-toplevel) . "/home/arubu/Workspace/Projet/") (("/home/arubu/Workspace/Projet/" "rev-parse" "--show-cdup") . "") (("/home/arubu/Workspace/Projet/" "rev-parse" "--show-toplevel") . "/home/arubu/Workspace/Projet") (("~/" . magit-toplevel)) (("/home/arubu/" "rev-parse" "--git-dir")) (("/home/arubu/" "rev-parse" "--show-toplevel")))) (magit-status "~/Workspace/Projet/" '((46 . 27) (("/home/arubu/Workspace/Projet/" "rev-parse" "--short" "HEAD~") . "c2ecc9e") (("/home/arubu/Workspace/Projet/" "rev-parse" "--short" "HEAD") . "c9ac7a8") (("/home/arubu/Workspace/Projet/" "rev-parse" "--verify" "HEAD~10") . "cef93e5b53a0e0008073d4d4057e3f71d8872d05") (("/home/arubu/Workspace/Projet/" "rev-parse" "@{upstream}")) (("/home/arubu/Workspace/Projet/" "rev-parse" "--verify" "refs/stash")) (("/home/arubu/Workspace/Projet/" "rev-parse" "--is-bare-repository") . "false
") (("/home/arubu/Workspace/Projet/" magit-git-dir "BISECT_LOG") . "/home/arubu/Workspace/Projet/.git/BISECT_LOG") (("/home/arubu/Workspace/Projet/" magit-git-dir "REVERT_HEAD") . "/home/arubu/Workspace/Projet/.git/REVERT_HEAD") (("/home/arubu/Workspace/Projet/" magit-git-dir "CHERRY_PICK_HEAD") . "/home/arubu/Workspace/Projet/.git/CHERRY_PICK_HEAD") (("/home/arubu/Workspace/Projet/" magit-git-dir "rebase-apply/applying") . "/home/arubu/Workspace/Projet/.git/rebase-apply/applying") (("/home/arubu/Workspace/Projet/" magit-git-dir "rebase-apply/onto") . "/home/arubu/Workspace/Projet/.git/rebase-apply/onto") (("/home/arubu/Workspace/Projet/" magit-git-dir "rebase-merge") . "/home/arubu/Workspace/Projet/.git/rebase-merge") (("/home/arubu/Workspace/Projet/" magit-git-dir "MERGE_HEAD") . "/home/arubu/Workspace/Projet/.git/MERGE_HEAD") (("/home/arubu/Workspace/Projet/" "rev-parse" "--git-dir") . ".git") (("/home/arubu/Workspace/Projet/" "describe" "--contains" "HEAD")) (("/home/arubu/Workspace/Projet/" "describe" "--long" "--tags")) (("/home/arubu/Workspace/Projet/" "show" "--no-patch" "--format=%h %s" "master^{commit}" "--") . "c9ac7a8 generalize the \"Attestation de Travail\" for Professor too") (("/home/arubu/Workspace/Projet/" "symbolic-ref" "--short" "HEAD") . "master") (("/home/arubu/Workspace/Projet/" "rev-parse" "--verify" "HEAD") . "c9ac7a8903ef2ccd021e2b9de99d4b6bbbd5531e") (("/home/arubu/Workspace/Projet/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8 data ("git.name" ("Anas Rchid") "git.email" ("rchid.anas@gmail.com") "user.name" ("Anas Rchid") "user.email" ("rchid.anas@gmail.com") "alias.a" ("add") "alias.ap" ("add -p") "alias.ac" ("!git add . && git commit -a -m") "alias.acu" ("!git add -u && git commit -a -m") "alias.c" ("commit --verbose") "alias.ca" ("commit -a --verbose") "alias.cm" ("commit -m") "alias.cam" ("commit -a -m") "alias.m" ("commit --amend --verbose") "alias.d" ("diff") "alias.ds" ("diff --stat -r") "alias.dch" ("diff --name-status -r") "alias.dca" ("diff --cached") "alias.s" ("status -s") "alias.co" ("checkout") "alias.cob" ("checkout -b") "alias.cl" ("clone") "alias.undo" ("reset --hard") "alias.pushitgood" ("!echo -e 'Ah, push it..
' && git push -u origin --all && echo -e '
P-push it real good'") "alias.cleanmerged" ("!git branch --merged | grep -v \"\\*\" | xargs -n 1 git branch -d") "alias.l" ("log --pretty=format:%C(red)%h\\ %ad%C(yellow)%d\\ %Creset%s --decorate --date=short") "alias.ll" ("log --pretty=format:%C(red)%h\\ %ad%Cyellow%d\\ %Creset%s%Cblue\\ [%cn] --decorate --date=short") "alias.hist" ("log --graph --pretty=format:'%Cred%h%Creset	 - %s %C(yellow)%d%Creset' --abbrev-commit --date=relative") "alias.histt" ("log --graph --pretty=format:'%Cred%h%Creset	 - %s %Cgreen(%cr) %C(yellow)%d%Creset' --abbrev-commit --date=relative") "alias.hista" ("log --graph --pretty=format:'%Cred%h%Creset	 - %s %Cgreen(%cr) %C(bold blue)<%an>%Creset %C(yellow)%d%Creset' --abbrev-commit --date=relative") "alias.tree" ("log --oneline --decorate --graph") "alias.fine" ("log --decorate --pretty=format:'(%C(yellow)%h %Creset -> %C(blue) %p%Creset) %Cgreen%cr%Creset %n  %C(white)\"%s\"%Creset%n' --graph --topo-order") "alias.new" ("!sh -c 'git log $1@{1}..$1@{0} $@'") "alias.whois" ("!sh -c 'git log -i -1 --pretty=\"format:%an <%ae>
\" --author=\"$1\"' -") "alias.whatis" ("show -s --pretty='tformat:%h (%s, %ad)' --date=short") "alias.bb" ("!git for-each-ref --sort='-authordate' --format='%(authordate)%09%(objectname:short)%09%(refname)' refs/heads | sed -e 's-refs/heads/--'") "alias.la" ("!git config -l | grep alias | cut -c 7-") "alias.deleted" ("log --diff-filter=D --summary") "cola.tabwidth" ("4") "cola.linebreak" ("false") "cola.boldheaders" ("true") "gui.editor" ("emacsclient -c") "diff.tool" ("meld") "merge.tool" ("meld") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "core.preloadindex" ("true") "log.showsignature" ("false")))) (("/home/arubu/Workspace/Projet/" . magit-toplevel) . "/home/arubu/Workspace/Projet/") (("~/Workspace/Projet/" . magit-toplevel) . "/home/arubu/Workspace/Projet/") (("/home/arubu/Workspace/Projet/" "rev-parse" "--show-cdup") . "") (("/home/arubu/Workspace/Projet/" "rev-parse" "--show-toplevel") . "/home/arubu/Workspace/Projet") (("~/" . magit-toplevel)) (("/home/arubu/" "rev-parse" "--git-dir")) (("/home/arubu/" "rev-parse" "--show-toplevel")))) (package-list-packages nil) (find-file "~/Workspace/Projet/README.org" t) (find-file "~/Workspace/Projet/README.org" t) (kill-buffer "stage.org") (magit-reset-hard "HEAD") (magit-gitignore-locally "/GH-FLSHJ/src/testing/*") (magit-status "~/Workspace/Projet/" '((46 . 27) (("/home/arubu/Workspace/Projet/" "rev-parse" "--short" "HEAD~") . "42157da") (("/home/arubu/Workspace/Projet/" "rev-parse" "--short" "HEAD") . "0a9215a") (("/home/arubu/Workspace/Projet/" "rev-parse" "--verify" "HEAD~10")) (("/home/arubu/Workspace/Projet/" "rev-parse" "@{upstream}")) (("/home/arubu/Workspace/Projet/" "rev-parse" "--verify" "refs/stash")) (("/home/arubu/Workspace/Projet/" "rev-parse" "--is-bare-repository") . "false
") (("/home/arubu/Workspace/Projet/" magit-git-dir "BISECT_LOG") . "/home/arubu/Workspace/Projet/.git/BISECT_LOG") (("/home/arubu/Workspace/Projet/" magit-git-dir "REVERT_HEAD") . "/home/arubu/Workspace/Projet/.git/REVERT_HEAD") (("/home/arubu/Workspace/Projet/" magit-git-dir "CHERRY_PICK_HEAD") . "/home/arubu/Workspace/Projet/.git/CHERRY_PICK_HEAD") (("/home/arubu/Workspace/Projet/" magit-git-dir "rebase-apply/applying") . "/home/arubu/Workspace/Projet/.git/rebase-apply/applying") (("/home/arubu/Workspace/Projet/" magit-git-dir "rebase-apply/onto") . "/home/arubu/Workspace/Projet/.git/rebase-apply/onto") (("/home/arubu/Workspace/Projet/" magit-git-dir "rebase-merge") . "/home/arubu/Workspace/Projet/.git/rebase-merge") (("/home/arubu/Workspace/Projet/" magit-git-dir "MERGE_HEAD") . "/home/arubu/Workspace/Projet/.git/MERGE_HEAD") (("/home/arubu/Workspace/Projet/" "rev-parse" "--git-dir") . ".git") (("/home/arubu/Workspace/Projet/" "describe" "--contains" "HEAD")) (("/home/arubu/Workspace/Projet/" "describe" "--long" "--tags")) (("/home/arubu/Workspace/Projet/" "show" "--no-patch" "--format=%h %s" "master^{commit}" "--") . "0a9215a add column names to the JTables") (("/home/arubu/Workspace/Projet/" "symbolic-ref" "--short" "HEAD") . "master") (("/home/arubu/Workspace/Projet/" "rev-parse" "--verify" "HEAD") . "0a9215a23b35526f17acd5248be1ada3b85fe3e4") (("/home/arubu/Workspace/Projet/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8 data ("git.name" ("Anas Rchid") "git.email" ("rchid.anas@gmail.com") "user.name" ("Anas Rchid") "user.email" ("rchid.anas@gmail.com") "alias.a" ("add") "alias.ap" ("add -p") "alias.ac" ("!git add . && git commit -a -m") "alias.acu" ("!git add -u && git commit -a -m") "alias.c" ("commit --verbose") "alias.ca" ("commit -a --verbose") "alias.cm" ("commit -m") "alias.cam" ("commit -a -m") "alias.m" ("commit --amend --verbose") "alias.d" ("diff") "alias.ds" ("diff --stat -r") "alias.dch" ("diff --name-status -r") "alias.dca" ("diff --cached") "alias.s" ("status -s") "alias.co" ("checkout") "alias.cob" ("checkout -b") "alias.cl" ("clone") "alias.undo" ("reset --hard") "alias.pushitgood" ("!echo -e 'Ah, push it..
' && git push -u origin --all && echo -e '
P-push it real good'") "alias.cleanmerged" ("!git branch --merged | grep -v \"\\*\" | xargs -n 1 git branch -d") "alias.l" ("log --pretty=format:%C(red)%h\\ %ad%C(yellow)%d\\ %Creset%s --decorate --date=short") "alias.ll" ("log --pretty=format:%C(red)%h\\ %ad%Cyellow%d\\ %Creset%s%Cblue\\ [%cn] --decorate --date=short") "alias.hist" ("log --graph --pretty=format:'%Cred%h%Creset	 - %s %C(yellow)%d%Creset' --abbrev-commit --date=relative") "alias.histt" ("log --graph --pretty=format:'%Cred%h%Creset	 - %s %Cgreen(%cr) %C(yellow)%d%Creset' --abbrev-commit --date=relative") "alias.hista" ("log --graph --pretty=format:'%Cred%h%Creset	 - %s %Cgreen(%cr) %C(bold blue)<%an>%Creset %C(yellow)%d%Creset' --abbrev-commit --date=relative") "alias.tree" ("log --oneline --decorate --graph") "alias.fine" ("log --decorate --pretty=format:'(%C(yellow)%h %Creset -> %C(blue) %p%Creset) %Cgreen%cr%Creset %n  %C(white)\"%s\"%Creset%n' --graph --topo-order") "alias.new" ("!sh -c 'git log $1@{1}..$1@{0} $@'") "alias.whois" ("!sh -c 'git log -i -1 --pretty=\"format:%an <%ae>
\" --author=\"$1\"' -") "alias.whatis" ("show -s --pretty='tformat:%h (%s, %ad)' --date=short") "alias.bb" ("!git for-each-ref --sort='-authordate' --format='%(authordate)%09%(objectname:short)%09%(refname)' refs/heads | sed -e 's-refs/heads/--'") "alias.la" ("!git config -l | grep alias | cut -c 7-") "alias.deleted" ("log --diff-filter=D --summary") "cola.tabwidth" ("4") "cola.linebreak" ("false") "cola.boldheaders" ("true") "gui.editor" ("emacsclient -c") "diff.tool" ("meld") "merge.tool" ("meld") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "core.preloadindex" ("true") "log.showsignature" ("false")))) (("/home/arubu/Workspace/Projet/" . magit-toplevel) . "/home/arubu/Workspace/Projet/") (("~/Workspace/Projet/" . magit-toplevel) . "/home/arubu/Workspace/Projet/") (("/home/arubu/Workspace/Projet/" "rev-parse" "--show-cdup") . "") (("/home/arubu/Workspace/Projet/" "rev-parse" "--show-toplevel") . "/home/arubu/Workspace/Projet") (("~/" . magit-toplevel)) (("/home/arubu/" "rev-parse" "--git-dir")) (("/home/arubu/" "rev-parse" "--show-toplevel")))) (magit-status "~/Workspace/Projet/" '((46 . 27) (("/home/arubu/Workspace/Projet/" "rev-parse" "--short" "HEAD~") . "66fb2d3") (("/home/arubu/Workspace/Projet/" "rev-parse" "--short" "HEAD") . "42157da") (("/home/arubu/Workspace/Projet/" "rev-parse" "--verify" "HEAD~10")) (("/home/arubu/Workspace/Projet/" "rev-parse" "@{upstream}")) (("/home/arubu/Workspace/Projet/" "rev-parse" "--verify" "refs/stash")) (("/home/arubu/Workspace/Projet/" "rev-parse" "--is-bare-repository") . "false
") (("/home/arubu/Workspace/Projet/" magit-git-dir "BISECT_LOG") . "/home/arubu/Workspace/Projet/.git/BISECT_LOG") (("/home/arubu/Workspace/Projet/" magit-git-dir "REVERT_HEAD") . "/home/arubu/Workspace/Projet/.git/REVERT_HEAD") (("/home/arubu/Workspace/Projet/" magit-git-dir "CHERRY_PICK_HEAD") . "/home/arubu/Workspace/Projet/.git/CHERRY_PICK_HEAD") (("/home/arubu/Workspace/Projet/" magit-git-dir "rebase-apply/applying") . "/home/arubu/Workspace/Projet/.git/rebase-apply/applying") (("/home/arubu/Workspace/Projet/" magit-git-dir "rebase-apply/onto") . "/home/arubu/Workspace/Projet/.git/rebase-apply/onto") (("/home/arubu/Workspace/Projet/" magit-git-dir "rebase-merge") . "/home/arubu/Workspace/Projet/.git/rebase-merge") (("/home/arubu/Workspace/Projet/" magit-git-dir "MERGE_HEAD") . "/home/arubu/Workspace/Projet/.git/MERGE_HEAD") (("/home/arubu/Workspace/Projet/" "rev-parse" "--git-dir") . ".git") (("/home/arubu/Workspace/Projet/" "describe" "--contains" "HEAD")) (("/home/arubu/Workspace/Projet/" "describe" "--long" "--tags")) (("/home/arubu/Workspace/Projet/" "show" "--no-patch" "--format=%h %s" "master^{commit}" "--") . "42157da switch label names to Arabic because it's lafac dial l2adab?") (("/home/arubu/Workspace/Projet/" "symbolic-ref" "--short" "HEAD") . "master") (("/home/arubu/Workspace/Projet/" "rev-parse" "--verify" "HEAD") . "42157da331f6788fd1c5007c3a2a1d9becb0b3dd") (("/home/arubu/Workspace/Projet/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8 data ("git.name" ("Anas Rchid") "git.email" ("rchid.anas@gmail.com") "user.name" ("Anas Rchid") "user.email" ("rchid.anas@gmail.com") "alias.a" ("add") "alias.ap" ("add -p") "alias.ac" ("!git add . && git commit -a -m") "alias.acu" ("!git add -u && git commit -a -m") "alias.c" ("commit --verbose") "alias.ca" ("commit -a --verbose") "alias.cm" ("commit -m") "alias.cam" ("commit -a -m") "alias.m" ("commit --amend --verbose") "alias.d" ("diff") "alias.ds" ("diff --stat -r") "alias.dch" ("diff --name-status -r") "alias.dca" ("diff --cached") "alias.s" ("status -s") "alias.co" ("checkout") "alias.cob" ("checkout -b") "alias.cl" ("clone") "alias.undo" ("reset --hard") "alias.pushitgood" ("!echo -e 'Ah, push it..
' && git push -u origin --all && echo -e '
P-push it real good'") "alias.cleanmerged" ("!git branch --merged | grep -v \"\\*\" | xargs -n 1 git branch -d") "alias.l" ("log --pretty=format:%C(red)%h\\ %ad%C(yellow)%d\\ %Creset%s --decorate --date=short") "alias.ll" ("log --pretty=format:%C(red)%h\\ %ad%Cyellow%d\\ %Creset%s%Cblue\\ [%cn] --decorate --date=short") "alias.hist" ("log --graph --pretty=format:'%Cred%h%Creset	 - %s %C(yellow)%d%Creset' --abbrev-commit --date=relative") "alias.histt" ("log --graph --pretty=format:'%Cred%h%Creset	 - %s %Cgreen(%cr) %C(yellow)%d%Creset' --abbrev-commit --date=relative") "alias.hista" ("log --graph --pretty=format:'%Cred%h%Creset	 - %s %Cgreen(%cr) %C(bold blue)<%an>%Creset %C(yellow)%d%Creset' --abbrev-commit --date=relative") "alias.tree" ("log --oneline --decorate --graph") "alias.fine" ("log --decorate --pretty=format:'(%C(yellow)%h %Creset -> %C(blue) %p%Creset) %Cgreen%cr%Creset %n  %C(white)\"%s\"%Creset%n' --graph --topo-order") "alias.new" ("!sh -c 'git log $1@{1}..$1@{0} $@'") "alias.whois" ("!sh -c 'git log -i -1 --pretty=\"format:%an <%ae>
\" --author=\"$1\"' -") "alias.whatis" ("show -s --pretty='tformat:%h (%s, %ad)' --date=short") "alias.bb" ("!git for-each-ref --sort='-authordate' --format='%(authordate)%09%(objectname:short)%09%(refname)' refs/heads | sed -e 's-refs/heads/--'") "alias.la" ("!git config -l | grep alias | cut -c 7-") "alias.deleted" ("log --diff-filter=D --summary") "cola.tabwidth" ("4") "cola.linebreak" ("false") "cola.boldheaders" ("true") "gui.editor" ("emacsclient -c") "diff.tool" ("meld") "merge.tool" ("meld") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "core.preloadindex" ("true") "log.showsignature" ("false")))) (("/home/arubu/Workspace/Projet/" . magit-toplevel) . "/home/arubu/Workspace/Projet/") (("~/Workspace/Projet/" . magit-toplevel) . "/home/arubu/Workspace/Projet/") (("/home/arubu/Workspace/Projet/" "rev-parse" "--show-cdup") . "") (("/home/arubu/Workspace/Projet/" "rev-parse" "--show-toplevel") . "/home/arubu/Workspace/Projet") (("~/" . magit-toplevel)) (("/home/arubu/" "rev-parse" "--git-dir")) (("/home/arubu/" "rev-parse" "--show-toplevel")))) (find-file "~/Workspace/Projet/GH-FLSHJ/src/view/MainWin.java" t) (tags-search "") (customize-face '(org-checkbox-statistics-todo)) (customize-face '(org-checkbox-statistics-todo)) (kill-buffer "MainWin.java") (kill-buffer "Main.java") (find-file "~/Workspace/Projet/GH-FLSHJ/data/hr.xml" t) (find-file "~/Workspace/Projet/GH-FLSHJ/data/hr.xml" t) (eval-expression '(* 5 (+ 7 3)) nil) (eval-expression '(* 5 5) nil) (select-in-delim) (select-in-delim) (select-in-delim) (select-in-delim) (eval-expression '(find-file user-init-file) nil) (find-file "/home/arubu/Workspace/Projet/" t) (set-fill-column 70) (set-fill-column 0) (set-fill-column 10) (helm-find-files nil) (find-file-other-frame "~/Workspace/Projet/GH-FLSHJ/data/hr.xml" t) (kill-buffer "*eshell*") (switch-to-buffer "hr.xml" nil 'force-same-window) (switch-to-buffer "hr.xml" nil 'force-same-window) (find-file "~/Workspace/Projet/GH-FLSHJ/data/hr.xml" t) (find-file "~/Workspace/Projet/GH-FLSHJ/data/dtd.xml" t) (eval-expression '(setq org-alert-interval 2500) nil) (eval-expression '(find-file user-init-file) nil) (find-file "~/Workspace/Projet/GH-FLSHJ/data/dtd.xml" t) (whitespace-mode 'toggle) (delete-trailing-whitespace nil nil) (delete-horizontal-space nil) (whitespace-mode 'toggle)))
(setq compile-history '("../make -k " "make -k " "make" "make " "make clean"))
(setq regexp-history '("latex" "fstack" "para" "void" "abs" "^int *(*) {"))
(setq wordnut-completion-hist '("grade" "*" "who's" "whose" "owe" "ought" "modulus"))
(setq query-replace-history '("name" "title" "employee" "book" "Employee" "bookstore" "" "user" "" "user" "S5" "S4" "" " " "" " " "" " :: " "** " "  + " "**" "   + " "**" " + " " " "_" "cir" "p" "f" "_sequence" "_pile" "file" "pile" "z" "head" "people" "list" "j" "i" "j" "i" "old" "origin" "new" "bar" "p" "n" "" "__" "add" "insert" "deathorder" "m" "npeople" "n" "node" "snode" "node" "lnode" "new" "bar" "node" "next" "bar" "node" "node" "foo" "node" "foo" "que" "q" "q" "z" "tail" "tail" "head" "length" "size" "length" "sz" "" "__" "queue" "stack" "qnode" "snode" "queue" "stack" "queue" "stack" "fstack_t" "fstack_t" "fstack" "lnode_t" "list_t" "origin" "foo" "head" "__head" "list"))
(setq yes-or-no-p-history '("yes" "no" "yes" "no" "yes" "tes" "yes" "no" "yes" "no" "yes"))
(setq shell-command-history '("git clone https://github.com/0x0584/dot-files" "tar -czf foo.tar.gz *" "tar czf s01" "gzip *" "gzip" "xclip -o" "xclip -O" "xclip -o" "mkdir aoa"))
(setq Man-topic-history '("cbreak" "newwin" "cbreak" "strlen" "gcc" "sprintf"))
(setq buffer-name-history '("hr.xml" "ar.txt" "int.s" "bar.c" "hr.xml" "guitar.org" "Printer.java" "main.xml" "stage.org" "MainWin.java" "Main.java" "*eshell*" "hr.xml" "empl.xml" "diary" "*ansi-term*" "*ansi-term*<2>" "*lynx*" "TUTORIAL" "*scratch*" "*Org PDF LaTeX Output*" "db-normalisation.org" "foo.org" "foo.c" "*ansi-term*" "*Flycheck errors*" "*scratch*" "*ansi-term*" "*Chessboard*" "hibernate.cfg.xml" "*scratch*" "serie1.org" "serie1" "*Org Src serie1.org[ sql ]*" "*ansi-term*" "main.c" "ex03" "cookies.php" "*Flycheck errors*" "output.txt" "ex02" "main.c" "cfile.c" "main.c" "Makefile" ".gitignore" "main.c" "*Flycheck errors*" "cpile.c" "main.c" "README.org<chapter-2>" "zero.c" "*ansi-term*" "nsnake" "zero.c" "*Flycheck errors*" "zero.c" "*ansi-term*" "*scratch*" "pair.c" "foo.org" "Downloads" "foo.org" "Workspace" "pair.c" "array" "main.c<src>" "main.c<nsnake>" "main.c<src>" "main.c<nsnake>" "main.c<src>" "main.c<nsnake>" "main.c<src>" "main.c<nsnake>" "main.c<src>" "global.h" "*Shell Command Output*" "snake.c<Workspace>" "*GNU Emacs*" "letter.org" "README.org" "*scratch*" "foo.x" "main.c" "list.c" "main.c" "list.c" "main.c" "list.c" "main.c" "list.c" "main.c" "list.c" "main.c" "gcd.c" "main.c" "gcd.c<chapter-3>" "main.c" "gcd.o" "ch3.h"))
(setq c-set-style-history '("cc-mode"))
(setq minibuffer-history '("stackoverflow" "*.png" "GH-FLSHJ/Diagrams/DetailedClasses.ucls" "en" "27" "50" "15" "18" "19" "45" "18" "26" "17" "30" "/GH-FLSHJ/src/testing/*" "31" "20" "70" "0" "10" "19" "16" "26" "learn xml" "generate dtd" "30" "/README.tex" "/README.pdf" "*.pdf,*.tex" "/usr/bin/bash" "/usr/bin/sh" "Mr. A. Madani" "faculte des lettres et des science humaines, El Jadida" "[2]" "[1]" "Java/XML" "jdee-20180218.919" "jdee" "csharp-mode" "/usr/bin/sh" "video" "stage" "/usr/bin/sh" "97" "/usr/bin/sh" "root" "arfed" "+x" "/ds/output.txt" "/ds/foo.tar.gz" "/usr/bin/sh" "14" "25" "/usr/bin/sh" "/array/pair" "/usr/bin/sh" "stackoverflow" "/usr/bin/sh" "0x0584" "text overwrite" "0x0584" "/usr/bin/sh" "23" "47" "/usr/bin/sh" "138" "/usr/bin/sh" "I DO NOT UNDERSTAND THIS QUIET WELL!" "a request may use GET or/and POST" "0x0584" "/usr/bin/sh" "foo" "algs" "/usr/bin/sh" "algs" "10" "*.svg" "/usr/bin/sh" "s" "/usr/bin/sh" "28" "26" "34" "/usr/bin/sh"))
(setq face-name-history '("org-checkbox-statistics-todo" "font-lock-function-name-face" "font-lock-string-face" "org-checkbox-statistics-todo" "org-archived, org-checkbox-statistics-todo" "org-checkbox-statistics-todo" "font-lock-function-name-face" "org-level-1" "org-level-2" "org-verbatim" "org-level-2" "org-level-1" "org-level-3" "all faces" "font-lock-function-name-face" "org-checkbox" "font-lock-preprocessor-face, font-lock-negation-char-face"))
(setq extended-command-history '("sx-search" "sx-ask" "text-mode" "langtool-check" "find-file" "diff" "pwd" "customize-face" "delete-file" "package-list-packages" "tags-search" "customize-face" "select-in-delim" "helm-find-files" "whitespace-mode" "delete-trailing-whitespace" "delete-horizontal-space" "whitespace-mode" "package-list-packages" "package-install" "rename-file" "customize-face" "customize-themes" "customize-face" "xml-mode" "web-mode" "eshell" "ansi-term" "info" "insert-date" "package-delete" "jdee-run" "package-install" "package-list-packages" "customize-face" "customize-themes" "customize-face" "auto-insert" "pwd" "csharp-mode" "package-install" "ansi-term" "org-alert-disable" "visual-line-mode" "package-list-packages" "customize-face" "artist-mode" "ansi-term" "chess" "customize-face" "ansi-term" "web-mode" "nyan-mode" "customize-face" "ansi-term" "create-tags" "customize-themes" "helm-themes" "create-tags" "pwd" "ansi-term" "customize-face" "web-mode" "php-mode" "html-mode" "insert-date" "php-mode" "web-mode" "auto-complete-mode" "sql-mode" "sql-mysql" "autoconf-mode" "ansi-term" "package-install" "pwd" "copy-file" "ansi-term" "customize-face" "create-tags" "delete-file" "ansi-term" "org-alert-check" "artist-mode" "customize-face" "ansi-term" "flycheck-list-errors" "customize-themes" "helm-themes" "ansi-term" "find-file" "find-grep" "ansi-term" "auto-insert" "ansi-term" "auto-insert" "artist-mode" "insert-date" "org-alert-disable" "ansi-term" "copy-file"))
(setq read-expression-history '("(* 5 (+ 7 3))" "(* 5 5)" "(find-file user-init-file)" "(setq org-alert-interval 2500)" "(find-file user-init-file)" "(add-hook 'before-save-hook 'delete-nl-spaces)" "
(add-hook 'find-file-hook 'delete-nl-spaces-find-file-hook)
" "
(defun delete-nl-spaces-find-file-hook ()
  \"Check whether to disable `delete-nl-spaces'.\"
  (when (and (buffer-file-name) (file-exists-p (buffer-file-name)))
    (let ((buffer (current-buffer))
          (final-newline require-final-newline)
          (tabs-mode indent-tabs-mode))
      (with-temp-buffer
        (setq-local require-final-newline final-newline)
        (setq indent-tabs-mode tabs-mode)
        (insert-buffer-substring buffer)
        (delete-nl-spaces)
        (unless (= (compare-buffer-substrings buffer nil nil nil nil nil) 0)
          (set-buffer buffer)
          (delete-nl-spaces-mode -1)
          (message \"delete-nl-spaces-mode disabed for %s\"
                   (buffer-name buffer)))))))
" "(find-file user-init-file)" "(global-set-key (kbd \"C-x t\") 'eshell)" "(find-file user-init-file)" "(file-file user-init-file)" "(setq org-alert-interval 1800)" "(setq org-alert-interval 900)" "(setq org-alert-interval 900)	; 60 sec * 30 min" "(setq org-alert-interval 1800)	; 60 sec * 30 min" "(setq org-alert-interval (* (* 60 30) 2))	; 60 sec * 30 min" "(setq org-alert-interval 900*2)" "(setq org-alert-interval 900*2)	; 60 sec * 30 min" "(find-file user-init-file)" "(set-face-attribute 'linum nil :height 100)" "(find-file user-init-file)" "(set-face-attribute 'linum nil :height 100)" "(setq auto-insert-alist
      '(((ruby-mode . \"Ruby program\") nil
         \"#!/usr/bin/env ruby\\n\\n\"
         \"# File: \" (file-name-nondirectory buffer-file-name) \"\\n\"
         \"# Time-stamp: <>\\n\"
         \"# Copyright (C) \" (substring (current-time-string) -4) \" \" auto-insert-copyright \"\\n\"
         \"# Description: \" _ \"\\n\\n\")
	((emacs-lisp-mode . \"Emacs lisp mode\") nil
         \";;; \" (file-name-nondirectory buffer-file-name) \" --- \" _ \"\\n\\n\"
         \";; Time-stamp: <>\\n\"
         \";; Copyright (C) \" (substring (current-time-string) -4) \" \" auto-insert-copyright \"\\n\\n\"
         \";;; Commentary:\\n\\n\"
         \";;; Code:\\n\\n\"
         \";;; \" (file-name-nondirectory buffer-file-name) \" ends here\\n\")

	((c-mode . \"C program\") nil
	 \"/* FILE: \\t\" (file-name-nondirectory buffer-file-name) \"\\n\"
	 \" * AUTHOR: \\tANAS RCHID\\n\"
	 \" * DESCRIPTION:\\tNULL\\n\"
	 \" * \\n\"
	 \" * CREATION:\\t\" (insert-date) \"\\n\"
	 \" * MODIFIED:\\t\" (insert-date) \"\\n */\\n\\n\"
	 )
        ((shell-mode . \"Shell script\") nil
         \"#!/bin/bash\\n\\n\"
         \" # File: \" (file-name-nondirectory buffer-file-name) \"\\n\"
         \" # Time-stamp: <>\\n\"
         \" # Copyright (C) \" (substring
			      (current-time-string) -4) \" \"
			      auto-insert-copyright \"\\n\"
			      \" # Description: \" _ \"\\n\\n\")
	((cperl-mode . \"Perl\") nil
	 \"#!/usr/bin/perl\"
	 \"\\n#=======================================================\"
	 \"========================\"
	 \"\\n#\"
	 \"\\n#         FILE: \" (file-name-nondirectory buffer-file-name)
	 \"\\n#\"
	 \"\\n#        USAGE: ./\" (file-name-nondirectory buffer-file-name)
	 \"\\n#\"
	 \"\\n#  DESCRIPTION: ---\"
	 \"\\n#\"
	 \"\\n#      OPTIONS: ---\"
	 \"\\n# REQUIREMENTS: ---\"
	 \"\\n#         BUGS: ---\"
	 \"\\n#        NOTES: ---\"
	 \"\\n#       AUTHOR: Anas Rchid (0x0584) <rchid.anas@gmail.com>\"
	 \"\\n# ORGANIZATION: ---\"
	 \"\\n#      VERSION: 1.0\"
	 \"\\n#      CREATED: \" (insert-date)
	 \"\\n#     REVISION: ---\"
	 \"\\n#========================================================\"
	 \"=======================\")
	))" "(find-file user-init-file)" "(setq org-latex-listings 'minted)" "(find-file user-init-file)" "(global-set-key (kbd \"C-c s\") 'swap-buffer)" "(defun swap-buffer ()
  (interactive)
  (cond ((one-window-p) (display-buffer (other-buffer)))
        ((let* ((buffer-a (current-buffer))
                (window-b (cadr (window-list)))
                (buffer-b (window-buffer window-b)))
           (set-window-buffer window-b buffer-a)
           (switch-to-buffer buffer-b)
           (other-window 1)))))" "(find-file user-init-file)" "(require 'desktop+)" "(custom-set-variables
  ;; custom-set-variables was added by Custom.
  ;; If you edit it by hand, you could mess it up, so be careful.
  ;; Your init file should contain only one such instance.
  ;; If there is more than one, they won't work right.
 '(tab-stop-list (quote (4 8 12 16 20 24 28 32 36 40 44 48 52 56 60 64 68 72 76 80 84 88 92 96 100 104 108 112 116 120))))" "(find-file user-init-file)" "(setq c-default-style \"cc-mode\")" "(find-file user-init-file)" "(defun c-reformat-buffer()
  (interactive)
  (save-buffer)
  (setq sh-indent-command
	(concat \"indent -nbad -bap -bbo -nbc -br -brs \"
		\"-brf -c33 -cd33 -ncdb -ce -ci4 -cli0 \"
		\"-cp33 -cs -d0 -di1 -nfc1 -nfca -hnl \"
		\"-i4 -ip0 -l75 -lp -npcs -nprs -npsl \"
		\"-saf -sai -saw -nsc -nsob -nss -ppi2 \"))
  (mark-whole-buffer)
  (universal-argument)
  (shell-command-on-region
   (point-min)
   (point-max)
   sh-indent-command
   (buffer-name))
  (save-buffer))" "(find-file user-init-file)"))
(setq file-name-history '("~/.emacs.d/" "~/Workspace/Projet/" "~/Workspace/Projet/GH-FLSHJ/data/xml/hr.xml" "~/Workspace/Projet/" "~/Workspace/resume.cs" "/home/arubu/Workspace/ar.txt" "~/Workspace/Projet/" "/home/arubu/Workspace/ar.txt" "~/Workspace/ar.txt" "/home/arubu/.bashrc" "/home/arubu/bashrc" "~/Workspace/Projet/" "~/Workspace/complex.c" "~/Workspace/file.h" "~/Workspace/int.s" "~/Workspace/int.c" "~/Workspace/syntax.s" "~/Workspace/syntax.c" "~/Workspace/syntax.i" "/home/arubu/donut.c" "/home/arubu/endoh1.c" "~/Workspace/" #("file.h" 0 1 (fontified t c-in-sws t face font-lock-string-face) 1 2 (fontified t c-in-sws t face font-lock-string-face) 2 3 (fontified t c-in-sws t face font-lock-string-face) 3 4 (fontified t c-in-sws t face font-lock-string-face) 4 5 (fontified t c-in-sws t face font-lock-string-face) 5 6 (fontified t c-in-sws t face font-lock-string-face)) "~/Workspace/syntax.c" "~/Downloads/Telegram Desktop/count.py" "~/Workspace/bar.c" "~/Workspace/Projet/" "~/Workspace/Projet/GH-FLSHJ/data/xml/hr.xml" "~/Workspace/Projet/README.org" "~/Workspace/Projet/GH-FLSHJ/data/xml/hr.xml" "~/Workspace/Projet/" "~/orged/agenda/guitar.org" "~/Workspace/Projet/" "~/orged/agenda/guitar.org" "~/Workspace/Projet/" "~/Workspace/Projet/GH-FLSHJ/data/xml/hr.xml" "~/Workspace/Projet/GH-FLSHJ/data/xml/main.xml" "~/Workspace/Projet/GH-FLSHJ/data/xml/dep.xml" "~/Workspace/Projet/" "~/Workspace/Projet/README.org" "~/Workspace/Projet/" "~/Workspace/Projet/GH-FLSHJ/src/view/MainWin.java" "~/Workspace/Projet/GH-FLSHJ/data/hr.xml" "/home/arubu/Workspace/Projet/" "~/Workspace/Projet/GH-FLSHJ/data/hr.xml" "~/Workspace/Projet/GH-FLSHJ/data/hr.xml" "~/Workspace/Projet/GH-FLSHJ/data/dtd.xml" "~/Workspace/Projet/GH-FLSHJ/data/dtd.xml" "~/Workspace/Projet/GH-FLSHJ/data/hr.xml" "~/Workspace/Projet/GH-FLSHJ/data/empl.xml" "~/orged/agenda/" "~/Workspace/Projet/GH-FLSHJ/data/" "~/Workspace/Projet/GH-FLSHJ/data/empl.xml" "~/Workspace/Projet/GH-FLSHJ/data/README.org" "~/Workspace/Projet/GH-FLSHJ/data/empl.xml" "~/Workspace/Projet/" "~/Workspace/Projet/.gitignore" "~/Workspace/dot-files/" "~/orged/notes-gui.org" "/home/arubu/Downloads/Component.java" "/home/arubu/.bashrc" "~/Workspace/foo.py" "~/Workspace/Projet/README.org" "~/orged/db-normalisation.org" "~/Workspace/Projet/README.org" "~/orged/db-normalisation.org" "/home/arubu/Workspace/Projet/README.org" "~/Workspace/dot-files/.bashrc" "~/.bashrc" "~/Workspace/foo.java" "~/Workspace/dot-files/.bashrc.basic" "~/Workspace/" "~/" "/home/arubu/.bashrc" "~/Workspace/foo.java" "~/Workspace/foo.xml" "~/Workspace/foo.c" "~/Workspace/foo.org" "~/Workspace/foo.c" "/home/arfed/Workspace/notes/foo.py" "/home/arfed/Workspace/notes/" "/home/arfed/Workspace/notes/README.org" "/home/arfed/Workspace/cookies.cs" "/home/arfed/orged/s.org" "/run/media/arfed/766EC20B6EC1C3D9/Users/Anas Rchid/Documents/backup-windows/ISTA/Authantification/Authantification/Login.aspx.cs" "~/Workspace/algs-in-c/chapter-3/src/" "~/Workspace/algs-in-c/chapter-3/src/queue.c" "~/Workspace/algs-in-c/chapter-3/src/polish.c" "~/Workspace/algs-in-c/chapter-3/" "~/Workspace/algs-in-c/chapter-3/Makefile" "/home/arfed/Workspace/algs-in-c/" "/run/media/arfed/766EC20B6EC1C3D9/Computer Science && Programming/C-C++/C/C/Readme" "/home/arfed/Documents/ouzano/oracle/serie2.sql" "/home/arfed/Downloads/serie3.txt" "/home/arfed/Documents/ouzano/oracle/serie1.sql" "/home/arfed/Workspace/fooo.sql" "/run/media/arfed/UUI/serie1Oracle.txt" "/run/media/arfed/UUI/Serie2.txt" "~/Documents/ouzano/oracle/foo.sql" "/home/arfed/Documents/ouzano/oracle/serie1.sql"))
