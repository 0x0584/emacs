;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(org-tags-history sgml-tag-history minibuffer-history-search-history sql-user-history magit-revision-history grep-find-history org--links-history org-read-date-history sx-search--query-history Info-search-history command-history compile-history query-replace-from-to-history regexp-history wordnut-completion-hist query-replace-history yes-or-no-p-history erc-server-history-list shell-command-history Man-topic-history buffer-name-history xref--read-identifier-history c-set-style-history minibuffer-history face-name-history extended-command-history read-expression-history file-name-history))
(setq org-tags-history '("find" ":not:" "find"))
(setq sgml-tag-history '("html"))
(setq grep-find-history '("find . -type f -exec grep --color -nH -e \"zero.c\" {} +"))
(setq org-read-date-history '("   " "18:00    " "16:00    " "   " "12:00    " "   " "15:00    " "    " "20:00    "))
(setq sx-search--query-history '("swap nodes linked list" "swap nodes "))
(setq Info-search-history '("begin_src" "#+BEGIN_SRC"))
(setq command-history '((eval-expression '(find-file user-init-file) nil) (package-list-packages nil) (package-list-packages nil) (package-list-packages nil) (write-file "~/Music/Pink Floyd - Collection (Japanese CDs)/1967 - The Piper At The Gates Of Dawn (2006, Japan, EMI - TOCP-53803) Remastered/f.cue" t) (switch-to-buffer "*scratch*" nil 'force-same-window) (find-file "/home/arfed/Workspace/www/projet/README.org" t) (find-file "~/orged/agenda/todo.org" t) (org-occur-in-agenda-files "stage") (find-file "~/orged/agenda/todo.org" t) (customize-face '(org-checkbox-statistics-todo)) (customize-face '(org-archived org-checkbox-statistics-todo)) (customize-face '(org-checkbox-statistics-todo)) (find-file "~/orged/agenda/holiday.org" t) (artist-mode 'toggle) (artist-mode 'toggle) (find-file "~/Workspace/series/ds/s01/ex01/src/cpile.c" t) (switch-to-buffer-other-frame "*ansi-term*") (switch-to-buffer "*ansi-term*" nil 'force-same-window) (find-file "~/Workspace/series/ds/s01/ex01/src/main.c" t) (find-file "~/Workspace/series/ds/s01/ex03/src/main.c" t) (find-file "~/Workspace/series/ds/s01/ex01/src/cpile.c" t) (find-file "~/Workspace/series/ds/s01/ex01/include/cpile.h" t) (switch-to-buffer "*ansi-term*" nil 'force-same-window) (find-file "~/Workspace/series/ds/s01/ex01/src/cpile.c" t) (ansi-term "/usr/bin/sh") (find-file "~/Workspace/series/ds/s01/ex01/src/main.c" t) (find-file "~/Workspace/series/ds/s01/ex01/src/cpile.c" t) (find-file "/home/arfed/Workspace/memory-alloc.c" t) (kill-buffer "*Chessboard*") (chess '(chess-crafty chess-stockfish chess-glaurung chess-fruit chess-gnuchess chess-phalanx chess-ai)) (find-file "~/orged/" t) (find-file-other-frame "~/Downloads/docs/latexcheatsheet(1).pdf" t) (find-file "~/Downloads/test.org" t) (find-file "~/Downloads/" t) (find-file "~/orged/ex-math.org" t) (find-file "/home/arfed/orged/ex-math.pdf" t) (find-file "~/orged/agenda/sway3.org" t) (find-file "~/orged/agenda/stage.org" t) (find-file "/home/arfed/orged/dba.org" t) (customize-face '(font-lock-function-name-face)) (find-file "~/Workspace/series/ds/s01/ex01/src/cpile.c" t) (find-file "~/Workspace/perl/doc-class/classify.pl" t) (find-file "~/Documents/oracle_ouzanou/serie2.sql" t) (find-file "~/Documents/oracle.sql" t) (find-file "~/Documents/oracle_ouzanou/serie1.sql" t) (find-file "~/Documents/oracle_ouzanou/serie2.sql" t) (find-file "/var/www/html/foo.php" t) (switch-to-buffer-other-frame "hibernate.cfg.xml") (find-file-other-frame "~/Workspace/perl/doc-class/docs/" t) (find-file-other-frame "~/Workspace/perl/doc-class/topics/" t) (find-file-other-frame "~/Workspace/perl/doc-class/dicts/" t) (ansi-term "/usr/bin/sh") (find-file "~/Workspace/perl/doc-class/" t) (find-file "/home/arfed/Workspace/tp-jee/src/main/java/Metier/Employe.java" t) (find-file "~/Workspace/perl/doc-class/" t) (find-file "/home/arfed/Workspace/tp-jee/src/main/resources/hibernate.cfg.xml" t) (web-mode) (nyan-mode 'toggle) (switch-to-buffer "*scratch*" nil 'force-same-window) (find-file "~/orged/ar.org" t) (find-file "~/orged/db-normalisation.org" t) (customize-face '(org-level-1)) (customize-face '(org-level-2)) (find-file "~/Documents/oracle_ouzanou/serie1.org" t) (kill-buffer "serie1.org") (kill-buffer "serie1") (find-file "~/Documents/oracle_ouzanou/serie1" t) (customize-face '(org-verbatim)) (customize-face '(org-level-2)) (customize-face '(org-level-1)) (customize-face '(org-level-3)) (find-file "~/Documents/oracle_ouzanou/serie1.org" t) (find-file "~/Documents/oracle_ouzanou/serie1.org" t) (kill-buffer "*Org Src serie1.org[ sql ]*") (write-file "~/Documents/oracle_ouzanou/serie1.org" t) (find-file "~/Documents/oracle_ouzanou/serie1.sql" t) (write-file "~/Documents/oracle.sql" t) (find-file "/home/arfed/Documents/oracle.txt" t) (kill-buffer "*ansi-term*") (goto-line 97 nil) (switch-to-buffer "*ansi-term*" nil 'force-same-window) (find-file "~/Workspace/perl/doc-class/output.txt" t) (find-file "~/Workspace/perl/doc-class/out.txt" t) (ansi-term "/usr/bin/sh") (find-file-other-frame "~/Workspace/perl/doc-class/" t) (create-tags "~/Workspace/perl/doc-class/") (find-file "~/Workspace/perl/doc-class/classify.pl" t) (find-file "~/Workspace/series/ds/s01/ex03/src/global.c" t) (switch-to-buffer "main.c" nil 'force-same-window) (customize-themes) (helm-themes) (find-file "~/Workspace/series/ds/s01/" t) (find-file "~/Workspace/series/ds/s01/ex03/src/" t) (find-file "~/Workspace/series/ds/s01/ex03/src/main.c" t) (find-file "/home/arfed/Workspace/www/project/README.org" t) (find-file "~/Workspace/series/ds/s01/ex03/src/main.c" t) (find-file "~/Workspace/series/ds/s01/ex03/src/" t) (create-tags "~/Workspace/series/ds/s01/ex01/") (find-file "~/Workspace/series/ds/s01/" t) (find-file "~/Workspace/series/ds/s01/ex01/src/cpile.c" t)))
(setq compile-history '("../make -k " "make -k " "make" "make " "make clean"))
(setq regexp-history '("latex" "fstack" "para" "void" "abs" "^int *(*) {"))
(setq wordnut-completion-hist '("who's" "whose" "owe" "ought" "modulus"))
(setq query-replace-history '("cir" "p" "f" "_sequence" "_pile" "file" "pile" "z" "head" "people" "list" "j" "i" "j" "i" "old" "origin" "new" "bar" "p" "n" "" "__" "add" "insert" "deathorder" "m" "npeople" "n" "node" "snode" "node" "lnode" "new" "bar" "node" "next" "bar" "node" "node" "foo" "node" "foo" "que" "q" "q" "z" "tail" "tail" "head" "length" "size" "length" "sz" "" "__" "queue" "stack" "qnode" "snode" "queue" "stack" "queue" "stack" "fstack_t" "fstack_t" "fstack" "lnode_t" "list_t" "origin" "foo" "head" "__head" "list" "(*list)" "sz" "size" "tail" "z" "head" "foo" "foo" "tmp" "foo" "tmp" "i" "index" "unsigned" "int" "tmp" "q" "q" "c" "m" "b" "n" "a" "" "__" "k"))
(setq yes-or-no-p-history '("yes" "tes" "yes" "no" "yes" "no" "yes"))
(setq shell-command-history '("tar -czf foo.tar.gz *" "tar czf s01" "gzip *" "gzip" "xclip -o" "xclip -O" "xclip -o" "mkdir aoa"))
(setq Man-topic-history '("cbreak" "newwin" "cbreak" "strlen" "gcc" "sprintf"))
(setq buffer-name-history '("*scratch*" "*ansi-term*" "*Chessboard*" "hibernate.cfg.xml" "*scratch*" "serie1.org" "serie1" "*Org Src serie1.org[ sql ]*" "*ansi-term*" "main.c" "ex03" "cookies.php" "*Flycheck errors*" "output.txt" "ex02" "main.c" "cfile.c" "main.c" "Makefile" ".gitignore" "main.c" "*Flycheck errors*" "cpile.c" "main.c" "README.org<chapter-2>" "zero.c" "*ansi-term*" "nsnake" "zero.c" "*Flycheck errors*" "zero.c" "*ansi-term*" "*scratch*" "pair.c" "foo.org" "Downloads" "foo.org" "Workspace" "pair.c" "array" "main.c<src>" "main.c<nsnake>" "main.c<src>" "main.c<nsnake>" "main.c<src>" "main.c<nsnake>" "main.c<src>" "main.c<nsnake>" "main.c<src>" "global.h" "*Shell Command Output*" "snake.c<Workspace>" "*GNU Emacs*" "letter.org" "README.org" "*scratch*" "foo.x" "main.c" "list.c" "main.c" "list.c" "main.c" "list.c" "main.c" "list.c" "main.c" "list.c" "main.c" "gcd.c" "main.c" "gcd.c<chapter-3>" "main.c" "gcd.o" "ch3.h" ".gitignore" "*ansi-term*" "*Flycheck error messages*" "main.c" "diff-sieve.txt" "out.txt" "prime.c" "out.txt" "prime.c" "README.org" "out.txt" "prime.c" "out.txt" "prime.c" "out.txt" "prime.c" "out.txt" "prime.c" "out.txt" "prime.c" "out.txt" "main.c" "queue.c" "ch3.h" "list.c" "README.org"))
(setq c-set-style-history '("cc-mode"))
(setq minibuffer-history '("video" "stage" "/usr/bin/sh" "97" "/usr/bin/sh" "root" "arfed" "+x" "/ds/output.txt" "/ds/foo.tar.gz" "/usr/bin/sh" "14" "25" "/usr/bin/sh" "/array/pair" "/usr/bin/sh" "stackoverflow" "/usr/bin/sh" "0x0584" "text overwrite" "0x0584" "/usr/bin/sh" "23" "47" "/usr/bin/sh" "138" "/usr/bin/sh" "I DO NOT UNDERSTAND THIS QUIET WELL!" "a request may use GET or/and POST" "0x0584" "/usr/bin/sh" "foo" "algs" "/usr/bin/sh" "algs" "10" "*.svg" "/usr/bin/sh" "s" "/usr/bin/sh" "28" "26" "34" "/usr/bin/sh"))
(setq face-name-history '("org-checkbox-statistics-todo" "org-archived, org-checkbox-statistics-todo" "org-checkbox-statistics-todo" "font-lock-function-name-face" "org-level-1" "org-level-2" "org-verbatim" "org-level-2" "org-level-1" "org-level-3" "all faces" "font-lock-function-name-face" "org-checkbox" "font-lock-preprocessor-face, font-lock-negation-char-face"))
(setq extended-command-history '("package-list-packages" "customize-face" "artist-mode" "ansi-term" "chess" "customize-face" "ansi-term" "web-mode" "nyan-mode" "customize-face" "ansi-term" "create-tags" "customize-themes" "helm-themes" "create-tags" "pwd" "ansi-term" "customize-face" "web-mode" "php-mode" "html-mode" "insert-date" "php-mode" "web-mode" "auto-complete-mode" "sql-mode" "sql-mysql" "autoconf-mode" "ansi-term" "package-install" "pwd" "copy-file" "ansi-term" "customize-face" "create-tags" "delete-file" "ansi-term" "org-alert-check" "artist-mode" "customize-face" "ansi-term" "flycheck-list-errors" "customize-themes" "helm-themes" "ansi-term" "find-file" "find-grep" "ansi-term" "auto-insert" "ansi-term" "auto-insert" "artist-mode" "insert-date" "org-alert-disable" "ansi-term" "copy-file" "artist-mode" "ansi-term" "create-tags" "ansi-term" "package-reinstall" "package-install" "package-list-packages" "center-line" "artist-mode" "org-alert-disable" "ansi-term" "sx-search" "org-alert-disable" "ansi-term" "artist-mode" "org-alert-disable" "artist-mode" "Info-search" "org-alert-disable" "ansi-term" "org-alert-disable" "diff" "ansi-term" "auto-complete-mode" "ansi-term" "chess" "boxquote-text" "artist-mode" "boxquote-text" "org-alert-disable" "create-tags" "helm-etags-select" "create-tags" "ansi-term" "org-alert-disable" "ansi-term" "org-alert-disable" "ansi-term" "desktop-save" "desktop-menu-read" "desktop+-create" "desktop+-load-auto" "desktop-save-in-desktop-dir" "org-alert-disable"))
(setq read-expression-history '("(find-file user-init-file)" "(set-face-attribute 'linum nil :height 100)" "(find-file user-init-file)" "(set-face-attribute 'linum nil :height 100)" "(setq auto-insert-alist
      '(((ruby-mode . \"Ruby program\") nil
         \"#!/usr/bin/env ruby\\n\\n\"
         \"# File: \" (file-name-nondirectory buffer-file-name) \"\\n\"
         \"# Time-stamp: <>\\n\"
         \"# Copyright (C) \" (substring (current-time-string) -4) \" \" auto-insert-copyright \"\\n\"
         \"# Description: \" _ \"\\n\\n\")
	((emacs-lisp-mode . \"Emacs lisp mode\") nil
         \";;; \" (file-name-nondirectory buffer-file-name) \" --- \" _ \"\\n\\n\"
         \";; Time-stamp: <>\\n\"
         \";; Copyright (C) \" (substring (current-time-string) -4) \" \" auto-insert-copyright \"\\n\\n\"
         \";;; Commentary:\\n\\n\"
         \";;; Code:\\n\\n\"
         \";;; \" (file-name-nondirectory buffer-file-name) \" ends here\\n\")

	((c-mode . \"C program\") nil
	 \"/* FILE: \\t\" (file-name-nondirectory buffer-file-name) \"\\n\"
	 \" * AUTHOR: \\tANAS RCHID\\n\"
	 \" * DESCRIPTION:\\tNULL\\n\"
	 \" * \\n\"
	 \" * CREATION:\\t\" (insert-date) \"\\n\"
	 \" * MODIFIED:\\t\" (insert-date) \"\\n */\\n\\n\"
	 )
        ((shell-mode . \"Shell script\") nil
         \"#!/bin/bash\\n\\n\"
         \" # File: \" (file-name-nondirectory buffer-file-name) \"\\n\"
         \" # Time-stamp: <>\\n\"
         \" # Copyright (C) \" (substring
			      (current-time-string) -4) \" \"
			      auto-insert-copyright \"\\n\"
			      \" # Description: \" _ \"\\n\\n\")
	((cperl-mode . \"Perl\") nil
	 \"#!/usr/bin/perl\"
	 \"\\n#=======================================================\"
	 \"========================\"
	 \"\\n#\"
	 \"\\n#         FILE: \" (file-name-nondirectory buffer-file-name)
	 \"\\n#\"
	 \"\\n#        USAGE: ./\" (file-name-nondirectory buffer-file-name)
	 \"\\n#\"
	 \"\\n#  DESCRIPTION: ---\"
	 \"\\n#\"
	 \"\\n#      OPTIONS: ---\"
	 \"\\n# REQUIREMENTS: ---\"
	 \"\\n#         BUGS: ---\"
	 \"\\n#        NOTES: ---\"
	 \"\\n#       AUTHOR: Anas Rchid (0x0584) <rchid.anas@gmail.com>\"
	 \"\\n# ORGANIZATION: ---\"
	 \"\\n#      VERSION: 1.0\"
	 \"\\n#      CREATED: \" (insert-date)
	 \"\\n#     REVISION: ---\"
	 \"\\n#========================================================\"
	 \"=======================\")
	))" "(find-file user-init-file)" "(setq org-latex-listings 'minted)" "(find-file user-init-file)" "(global-set-key (kbd \"C-c s\") 'swap-buffer)" "(defun swap-buffer ()
  (interactive)
  (cond ((one-window-p) (display-buffer (other-buffer)))
        ((let* ((buffer-a (current-buffer))
                (window-b (cadr (window-list)))
                (buffer-b (window-buffer window-b)))
           (set-window-buffer window-b buffer-a)
           (switch-to-buffer buffer-b)
           (other-window 1)))))" "(find-file user-init-file)" "(require 'desktop+)" "(custom-set-variables
  ;; custom-set-variables was added by Custom.
  ;; If you edit it by hand, you could mess it up, so be careful.
  ;; Your init file should contain only one such instance.
  ;; If there is more than one, they won't work right.
 '(tab-stop-list (quote (4 8 12 16 20 24 28 32 36 40 44 48 52 56 60 64 68 72 76 80 84 88 92 96 100 104 108 112 116 120))))" "(find-file user-init-file)" "(setq c-default-style \"cc-mode\")" "(find-file user-init-file)" "(defun c-reformat-buffer()
  (interactive)
  (save-buffer)
  (setq sh-indent-command
	(concat \"indent -nbad -bap -bbo -nbc -br -brs \"
		\"-brf -c33 -cd33 -ncdb -ce -ci4 -cli0 \"
		\"-cp33 -cs -d0 -di1 -nfc1 -nfca -hnl \"
		\"-i4 -ip0 -l75 -lp -npcs -nprs -npsl \"
		\"-saf -sai -saw -nsc -nsob -nss -ppi2 \"))
  (mark-whole-buffer)
  (universal-argument)
  (shell-command-on-region
   (point-min)
   (point-max)
   sh-indent-command
   (buffer-name))
  (save-buffer))" "(find-file user-init-file)"))
(setq file-name-history '("/home/arfed/orged/jee.org" "/home/arfed/Music/Pink Floyd - Collection (Japanese CDs)/1967 - The Piper At The Gates Of Dawn (2006, Japan, EMI - TOCP-53803) Remastered/Pink Floyd - The Piper At The Gates Of Dawn (TOCP-53803).cue" "~/Music/Pink Floyd - Collection (Japanese CDs)/1967 - The Piper At The Gates Of Dawn (2006, Japan, EMI - TOCP-53803) Remastered/f.cue" "/home/arfed/Music/Pink Floyd - Collection (Japanese CDs)/1967 - The Piper At The Gates Of Dawn (2006, Japan, EMI - TOCP-53803) Remastered/Pink Floyd - The Piper At The Gates Of Dawn (TOCP-53803).cue" "/home/arfed/Workspace/www/projet/README.org" "~/orged/agenda/todo.org" "~/orged/agenda/holiday.org" "~/Workspace/series/ds/s01/ex01/src/cpile.c" "/home/arfed/Workspace/1.txt" "~/Workspace/series/ds/s01/ex01/src/main.c" "~/Workspace/series/ds/s01/ex03/src/main.c" "~/Workspace/series/ds/s01/ex01/src/cpile.c" "~/Workspace/series/ds/s01/ex01/include/cpile.h" "~/Workspace/series/ds/s01/ex01/src/cpile.c" "~/Workspace/series/ds/s01/ex01/src/main.c" "~/Workspace/series/ds/s01/ex01/src/cpile.c" "/home/arfed/Workspace/memory-alloc.c" "~/orged/" "~/Downloads/docs/latexcheatsheet(1).pdf" "~/Downloads/test.org" "~/Downloads/" "~/orged/ex-math.org" "/home/arfed/orged/ex-math.pdf" "~/orged/agenda/sway3.org" "~/orged/agenda/stage.org" "/home/arfed/orged/dba.org" "~/Workspace/series/ds/s01/ex01/src/cpile.c" "~/Workspace/perl/doc-class/classify.pl" "~/Documents/oracle_ouzanou/serie2.sql" "~/Documents/oracle.sql" "~/Documents/oracle_ouzanou/serie1.sql" "~/Documents/oracle_ouzanou/serie2.sql" "/var/www/html/foo.php" "~/Workspace/perl/doc-class/docs/" "~/Workspace/perl/doc-class/topics/" "~/Workspace/perl/doc-class/dicts/" "~/Workspace/perl/doc-class/" "/home/arfed/Workspace/tp-jee/src/main/java/Metier/Employe.java" "~/Workspace/perl/doc-class/" "/home/arfed/Workspace/tp-jee/src/main/resources/hibernate.cfg.xml" "/home/arfed/orged/ghiwan.org" "/home/arfed/orged/t.txt" "~/orged/ar.org" "~/orged/db-normalisation.org" "~/Documents/oracle_ouzanou/serie1.org" "~/Documents/oracle_ouzanou/serie1" "~/Documents/oracle_ouzanou/serie1.org" "~/Documents/oracle_ouzanou/serie1.sql" "~/Documents/oracle.sql" "/home/arfed/Documents/oracle.txt" "/home/arfed/Documents/oracle_ouzanou/serie1.sql" "~/Workspace/perl/doc-class/output.txt" "~/Workspace/perl/doc-class/out.txt" "~/Workspace/perl/doc-class/" "~/Workspace/perl/doc-class/classify.pl" "~/Workspace/series/ds/s01/ex03/src/global.c" "~/Workspace/series/ds/s01/" "~/Workspace/series/ds/s01/ex03/include/" "~/Workspace/series/ds/s01/ex03/bin/" "~/Workspace/series/ds/s01/ex03/src/" "~/Workspace/series/ds/s01/ex03/src/main.c" "/home/arfed/Workspace/www/project/README.org" "~/Workspace/series/ds/s01/ex03/src/main.c" "~/Workspace/series/ds/s01/ex03/src/" "~/Workspace/series/ds/s01/ex01/" "~/Workspace/series/ds/s01/" "~/Workspace/series/ds/s01/ex01/src/cpile.c" "~/Workspace/series/ds/s01/ex03/bin/" "~/Workspace/series/ds/s01/ex03/include/" "~/Workspace/series/ds/s01/ex03/" "~/Workspace/series/ds/s01/ex02/src/" "~/Workspace/series/ds/s01/ex03/src/main.c" "~/Workspace/series/ds/s01/ex03" "~/Workspace/series/ds/s01/ex02/src/" "~/Workspace/algs-in-c/chapter-2/src/gcd.f95" "/var/www/html/ABD/gi/test/application/controllers/fooCtrl.php" "/var/www/html/ABD/gi/test/application/model/Mod.php" "~/Workspace/series/ds/s01/ex02/src/" "~/Workspace/series/ds/s01/ex02/" "~/Workspace/series/ds/s01/ex02/src/main.c" "~/Workspace/series/ds/s01/ex01/src/cpile.c" "/var/www/html/ABD/gi/test/application/views/vue1.php" "/home/arfed/orged/codeigniter.org" "/var/www/html/ABD/gi/test/application/controllers/fooCtrl.php" "~/orged/agenda/exams.org" "/var/www/html/ABD/" "~/Workspace/series/ds/s01/ex01/src/cfile.c" "~/Workspace/series/ds/s01/ex01/src/cpile.c" "/var/www/html/ABD/css/styles.css" "/var/www/html/aa.zip" "/var/www/html/cookies.php" "/var/www/" "/home/arfed/orged/codeigniter.org" "~/Workspace/series/ds/s01/ex01/src/main.c" "~/Workspace/series/ds/s01/ex01/Makefile" "~/Workspace/series/ds/s01/ex02/src/" "~/Workspace/hamza.sql" "~/Workspace/series/ds/output.txt" "/home/arfed/Workspace/series/ds/output.txt" "~/Workspace/series/ds/output.txt"))
