;;; Automatically generated on Tue Oct  4 23:31:06 2016
;;; Invoked by arfed@cq56.fedora using 25.0.94.1
(setq-default kill-ring '("(setq neo-theme (if window-system 'icons 'arrow))" "Documents/orged/" "orged/UML-Figs/Fig1.png" #("(visual-line-mode 1)
" 0 1 (fontified t face \.\.\.) 1 19 (fontified t) 19 20 (face \.\.\. fontified nil) 20 21 (fontified nil)) "define-key org-mode-map (kbd \"C-S-a\") 'org-archive-subtree)" "; -- Display images in org mode
;; enable image mode first
(iimage-mode)
;; add the org file link format to the iimage mode regex
(add-to-list 'iimage-mode-image-regex-alist
  (cons (concat \"\\\\[\\\\[file:\\\\(~?\" iimage-mode-image-filename-regex \"\\\\)\\\\]\")  1))
;;  add a hook so we can display images on load
(add-hook 'org-mode-hook '(lambda () (org-turn-on-iimage-in-org)))
;; function to setup images for display on load
(defun org-turn-on-iimage-in-org ()
  \"display images in your org file\"
  (interactive)
  (turn-on-iimage-mode)
  (set-face-underline-p 'org-link nil))
;; function to toggle images in a org bugger
(defun org-toggle-iimage-in-org ()
  \"display images in your org file\"
  (interactive)
  (if (face-underline-p 'org-link)
      (set-face-underline-p 'org-link nil)
      (set-face-underline-p 'org-link t))
  (call-interactively 'iimage-mode))" #("Documents/orged/" 0 10 (fontified t) 10 16 (fontified t)) #("WAITING" 0 7 (face org-level-2 org-todo-head "TODO" fontified t)) #("destination
" 0 11 (fontified t) 11 12 (fontified nil)) #("Diagram" 0 7 (face \.\.\. fontified t))))
(setq-default session-file-alist '(("~/.emacs" 23397 2838 1 nil nil 23397 (overwrite-mode)) ("~/foo.org" 6245 6387 1 nil nil 123 (overwrite-mode)) ("~/cheatsheet.org" 52197 1125 1 nil nil 3564 (overwrite-mode)) ("~/.emacs.d/elpa/all-the-icons-20160921.935/all-the-icons-autoloads.el" 318 nil 1 nil nil 318 (overwrite-mode)) ("~/.emacs.d/ede-projects.el" 86 nil 1 nil nil 86 (overwrite-mode)) ("~/.emacs.d/elpa/neotree-20160921.1817/neotree-autoloads.el" 1276 nil 1 nil nil 1276 (overwrite-mode)) ("~/.emacs.d/elpa/ox-pandoc-20160702.145/ox-pandoc-autoloads.el" 14100 nil 1 nil nil 14100 (overwrite-mode)) ("~/.emacs.d/elpa/pandoc-20160607.1010/pandoc-autoloads.el" 976 nil 1 nil nil 976 (overwrite-mode)) ("~/.emacs.d/elpa/pandoc-mode-20160902.126/pandoc-mode-autoloads.el" 713 nil 1 nil nil 713 (overwrite-mode)) ("~/Documents/orged/UML.org" 2116 5701 1 nil nil 7115 (overwrite-mode)) ("~/Documents/orged/UML-Figs/Fig1.png" 347510 1 1 nil nil 347510 (overwrite-mode)) ("~/.emacs.d/elpa/org-download-20160907.1021/org-download-autoloads.el" 410 nil 1 nil nil 410 (overwrite-mode)) ("~/Documents/orged/leila.org" 80 nil 1 nil nil 83 (overwrite-mode)) ("~/.emacs.d/elpa/langtool-20160116.1654/langtool-autoloads.el" 771 nil 1 nil nil 771 (overwrite-mode)) ("~/Workspace/2c48/src/lib.c" 584 564 1 nil nil nil (overwrite-mode)) ("~/Workspace/2c48/src/lib.h" 94 279 1 nil nil 94 (overwrite-mode)) ("~/Workspace/2c48/src/init.c" 259 244 1 nil nil 249 (overwrite-mode)) ("~/Workspace/2c48/src/main.c" 269 247 1 nil nil 269 (overwrite-mode)) ("~/.emacs.d/elpa/rich-minority-20160725.1255/rich-minority-autoloads.el" 1168 nil 1 nil nil 1168 (overwrite-mode)) ("~/Workspace/org-files/test.org" 1 nil 1 nil nil 1 (overwrite-mode)) ("~/.emacs.d/elpa/diminish-20151215.915/diminish-autoloads.el" 2266 nil 1 nil nil 2266 (overwrite-mode)) ("~/Documents/tex/1.tex" 7615 6351 1 nil nil 7615 (overwrite-mode)) ("~/Documents/tex/ra.org" 417 416 1 nil nil 282 (overwrite-mode)) ("~/Workspace/morse-code-master/src/main.c" 1427 1286 1 nil nil 1894 (overwrite-mode)) ("~/Documents/tex/1.log" 1 nil 1 nil nil 11041 (overwrite-mode)) ("~/Documents/ISTA/ra.org" 1 1 1 nil nil 1 (overwrite-mode)) ("~/Workspace/morse-code-master/src/libmorse/libmorse.c" 263 2160 1 nil nil 2137 (overwrite-mode)) ("~/1.puml" 1 nil 1 nil nil 1 (overwrite-mode)) ("~/Workspace/morse-code-master/src/Makefile" 1 nil 1 nil nil 1209 (overwrite-mode)) ("~/Documents/ISTA/English Presentation.org" 5130 4820 1 nil nil 4535 (overwrite-mode)) ("~/Workspace/1.c" 278 211 1 nil nil 259 (overwrite-mode)) ("~/Workspace/coding-standards.c" 106 183 1 nil nil 106 (overwrite-mode)) ("~/.emacs.d/elpa/org-20160919/org-loaddefs.el" 88621 nil 1 nil nil 88621 (overwrite-mode)) ("~/.emacs.d/elpa/0blayout-20160919.823/0blayout-autoloads.el" 720 nil 1 nil nil 720 (overwrite-mode)) ("~/.emacs.d/elpa/bm-20160924.1310/bm-autoloads.el" 1261 nil 1 nil nil 1261 (overwrite-mode)) ("~/.emacs.d/elpa/clang-format-20160912.302/clang-format-autoloads.el" 838 nil 1 nil nil 838 (overwrite-mode)) ("~/.emacs.d/elpa/elfeed-20160911.1353/elfeed-autoloads.el" 1538 nil 1 nil nil 1538 (overwrite-mode)) ("~/.emacs.d/elpa/emojify-20160918.444/emojify-autoloads.el" 1725 nil 1 nil nil 1725 (overwrite-mode)) ("~/.emacs.d/elpa/flycheck-20160924.1038/flycheck-autoloads.el" 8452 nil 1 nil nil 8452 (overwrite-mode)) ("~/.emacs.d/elpa/flycheck-cstyle-20160905.1641/flycheck-cstyle-autoloads.el" 465 nil 1 nil nil 465 (overwrite-mode)) ("~/.emacs.d/elpa/git-commit-20160920.1452/git-commit-autoloads.el" 1024 nil 1 nil nil 1024 (overwrite-mode)) ("~/.emacs.d/elpa/gnu-apl-mode-20160922.2056/gnu-apl-mode-autoloads.el" 1627 nil 1 nil nil 1627 (overwrite-mode)) ("~/.emacs.d/elpa/grandshell-theme-20160922.640/grandshell-theme-autoloads.el" 601 nil 1 nil nil 601 (overwrite-mode)) ("~/.emacs.d/elpa/helm-20160925.19/helm-autoloads.el" 29010 nil 1 nil nil 29010 (overwrite-mode)) ("~/.emacs.d/elpa/helm-bibtex-20160924.201/helm-bibtex-autoloads.el" 604 nil 1 nil nil 604 (overwrite-mode)) ("~/.emacs.d/elpa/helm-core-20160922.2327/helm-core-autoloads.el" 6090 nil 1 nil nil 6090 (overwrite-mode)) ("~/.emacs.d/elpa/helm-gtags-20160917.2238/helm-gtags-autoloads.el" 3315 nil 1 nil nil 3315 (overwrite-mode)) ("~/.emacs.d/elpa/helm-themes-20160917.2245/helm-themes-autoloads.el" 410 nil 1 nil nil 410 (overwrite-mode)) ("~/.emacs.d/elpa/ht-20160911.1900/ht-autoloads.el" 240 nil 1 nil nil 240 (overwrite-mode)) ("~/.emacs.d/elpa/hydra-20160913.216/hydra-autoloads.el" 2287 nil 1 nil nil 2287 (overwrite-mode)) ("~/.emacs.d/elpa/ivy-20160923.551/ivy-autoloads.el" 3775 nil 1 nil nil 3775 (overwrite-mode)) ("~/.emacs.d/elpa/magit-20160924.1314/magit-autoloads.el" 54687 nil 1 nil nil 54687 (overwrite-mode)) ("~/.emacs.d/elpa/markdown-mode-20160920.743/markdown-mode-autoloads.el" 669 nil 1 nil nil 669 (overwrite-mode)) ("~/.emacs.d/elpa/org-20160919/org-autoloads.el" 26893 nil 1 nil nil 26893 (overwrite-mode)) ("~/.emacs.d/elpa/org-ref-20160921.1738/org-ref-autoloads.el" 28313 nil 1 nil nil 28313 (overwrite-mode)) ("~/.emacs.d/elpa/persp-mode-20160925.319/persp-mode-autoloads.el" 1379 nil 1 nil nil 1379 (overwrite-mode)) ("~/.emacs.d/elpa/projectile-20160921.902/projectile-autoloads.el" 14415 nil 1 nil nil 14415 (overwrite-mode)) ("~/.emacs.d/elpa/rotate-20160909.136/rotate-autoloads.el" 698 nil 1 nil nil 698 (overwrite-mode)) ("~/.emacs.d/elpa/s-20160922.443/s-autoloads.el" 238 nil 1 nil nil 238 (overwrite-mode)) ("~/.emacs.d/elpa/tao-theme-20160915.2124/tao-theme-autoloads.el" 903 nil 1 nil nil 903 (overwrite-mode)) ("~/.emacs.d/elpa/twittering-mode-20160921.1038/twittering-mode-autoloads.el" 409 nil 1 nil nil 409 (overwrite-mode)) ("~/.emacs.d/elpa/undo-tree-20160922.853/undo-tree-autoloads.el" 1672 nil 1 nil nil 1672 (overwrite-mode)) ("~/.emacs.d/elpa/web-mode-20160921.1327/web-mode-autoloads.el" 394 nil 1 nil nil 394 (overwrite-mode)) ("~/.emacs.d/elpa/which-key-20160911.1302/which-key-autoloads.el" 5002 nil 1 nil nil 5002 (overwrite-mode)) ("~/.emacs.d/elpa/with-editor-20160923.1530/with-editor-autoloads.el" 287 nil 1 nil nil 287 (overwrite-mode)) ("~/.emacs.d/elpa/auto-complete-auctex-20140223.958/auto-complete-auctex-autoloads.el" 284 nil 1 nil nil 284 (overwrite-mode)) ("~/.emacs.d/elpa/yasnippet-20160801.1142/yasnippet-autoloads.el" 1642 nil 1 nil nil 1642 (overwrite-mode)) ("~/.emacs.d/elpa/flylisp-0.2/flylisp-autoloads.el" 250 nil 1 nil nil 250 (overwrite-mode)) ("~/Workspace/morse-code-master/src/encode.c" 660 109 1 nil nil 131 (overwrite-mode)) ("~/Workspace/morse-code-master/README.org" 921 1 1 nil nil 1672 (overwrite-mode)) ("~/Workspace/morse-code-master/src/libmorse.c" 1707 376 1 nil nil 14 (overwrite-mode)) ("~/Desktop/c-compiler-develop/src/compiler/parser.c" 5043 28 1 nil nil 5176 (overwrite-mode)) ("~/Workspace/morse-code-master/src/init.c" 13 nil 1 nil nil 13 (overwrite-mode)) ("~/Workspace/morse-code-master/include/decode.h" 50 nil 1 nil nil 50 (overwrite-mode)) ("~/Workspace/morse-code-master/src/decode.c" 33 nil 1 nil nil 14 (overwrite-mode)) ("~/Workspace/morse-code-master/include/encode.h" 71 77 1 nil nil 49 (overwrite-mode)) ("~/Workspace/morse-code-master/Makefile" 536 122 1 nil nil 599 (overwrite-mode)) ("~/Workspace/morse-code-master/decode.c" 681 561 1 nil nil 668 (overwrite-mode)) ("~/Workspace/morse-code-master/libmorse.c" 1398 2039 1 nil nil 1208 (overwrite-mode)) ("~/Workspace/morse-code-master/main.c" 1428 1789 1 nil nil 1756 (overwrite-mode)) ("~/Workspace/morse-code-master/decode.h" 84 168 1 nil nil 84 (overwrite-mode)) ("~/.emacs.d/.emacs.desktop" 1196 nil 1 nil nil 13457 (overwrite-mode)) ("~/.emacs.d/elpa/c-eldoc-20160704.957/c-eldoc-autoloads.el" 503 nil 1 nil nil 503 (overwrite-mode)) ("~/.emacs.d/elpa/column-marker-20121128.43/column-marker-autoloads.el" 397 nil 1 nil nil 397 (overwrite-mode)) ("~/.emacs.d/elpa/term+-20160404.355/term+-autoloads.el" 416 nil 1 nil nil 416 (overwrite-mode)) ("~/Workspace/morse-code-master/libmorse.h" 595 615 1 nil nil 658 (overwrite-mode)) ("~/Workspace/morse-code-master/paranoidwarnings.txt" 498 1 1 nil nil 499 (overwrite-mode)) ("~/Workspace/morse-code-master/encode.c" 120 87 1 nil nil 118 (overwrite-mode)) ("~/Workspace/morse-code-master/encode.h" 318 343 1 nil nil 318 (overwrite-mode)) ("~/Workspace/clm/README.org" 131 131 1 nil nil 131 (overwrite-mode)) ("~/.emacs.d/elpa/markdown-mode+-20120829.510/markdown-mode+-autoloads.el" 1315 nil 1 nil nil 1315 (overwrite-mode)) ("~/.emacs.d/elpa/markdown-preview-mode-20160830.219/markdown-preview-mode-autoloads.el" 816 nil 1 nil nil 816 (overwrite-mode)) ("~/.emacs.d/elpa/websocket-20160720.2051/websocket-autoloads.el" 254 nil 1 nil nil 254 (overwrite-mode)) ("~/Documents/Workspace/algo/kt-git/kt.c" 2561 2827 1 nil nil 139 (overwrite-mode))))
(setq-default file-name-history '("~/.emacs" "~/.emacs.d/elpa/all-the-icons-20160921.935/all-the-icons-autoloads.el" "~/.emacs.d/ede-projects.el" "~/.emacs.d/elpa/neotree-20160921.1817/neotree-autoloads.el" "~/foo.org" "~/cheatsheet.org" "~/Documents/orged/UML.org" "~/.emacs.d/elpa/ox-pandoc-20160702.145/ox-pandoc-autoloads.el" "~/.emacs.d/elpa/pandoc-20160607.1010/pandoc-autoloads.el" "~/Documents/Computer Science/UML/Assignments/Modeling Execrices/Modeling - Exercises.html" "~/.emacs.d/elpa/pandoc-mode-20160902.126/pandoc-mode-autoloads.el" "~/Documents/orged/UML-Figs/Fig1.png" "~/.emacs.d/elpa/langtool-20160116.1654/langtool-autoloads.el" "~/Documents/orged/_region_.tex" "~/Documents/orged/<none>.tex" "~/Documents/UML-Figs/Fig1.png" "~/Documents/orged/UML.png" "~/Documents/orged/tryout.png" "~/Documents/Doc/UML/UMLBasics.pdf" "~/Documents/Doc/UML/" "~/Workspace/org-files/test.org" "~/Workspace/2c48/src/init.c" "~/Workspace/2c48/src/main.c" "~/Workspace/2c48/src/lib.h" "~/Workspace/2c48/src/Base.h" "~/Workspace/" "~/Documents/tex/1.log" "~/Documents/tex/_region_.tex" "~/Workspace/morse-code-master/include/libmorse.h" "~/Workspace/morse-code-master/src/main.c" "~/Documents/tex/ra.org" "~/Documents/tex/1.tex" "~/Documents/ISTA/ra.org" "~/Workspace/morse-code-master/src/libmorse/1.py" "~/Workspace/morse-code-master/src/libmorse/libmorse.c" "~/Workspace/morse-code-master/src/init.c" "~/Workspace/morse-code-master/include/decode.h" "~/Workspace/morse-code-master/morse.txt" "~/Workspace/morse-code-master/paranoidwarnings.txt" "~/Workspace/morse-code-master/README.org" "~/Workspace/morse-code-master/LICENSE" "~/Workspace/morse-code-master/include/encode.h" "~/Workspace/morse-code-master/src/encode.c" "~/Workspace/C/array-f/src/base.h" "~/Workspace/morse-code-master/src/libmorse.c" "~/Workspace/morse-code-master/src/decode.c" "~/Workspace/morse-code-master/Makefile" "~/Workspace/morse-code-master/" "~/Workspace/morse-code-master/include/" "~/Workspace/morse-code-master/src" "~/.eamcs" "~/Workspace/morse-code-master/include/encode.h~" "~/Workspace/morse-code-master/include/decode.h~" "~/Workspace/morse-code-master/include/*" "~/Workspace/morse-code-master/src/main.c~" "~/Workspace/morse-code-master/src/libmorse.c~" "~/Workspace/morse-code-master/src/init.c~" "~/Workspace/morse-code-master/src/encode.c~" "~/Workspace/morse-code-master/src/decode.c~" "~/Workspace/morse-code-master/src/*" "~/Workspace/morse-code-master/text.txt" "~/Workspace/morse-code-master/README.md" "~/Workspace/morse-code-master/.gitignore" "~/Workspace/morse-code-master/*" "~/Workspace/morse-code-master/include/paranoidwarnings.txt" "~/Workspace/morse-code-master/include/morse.txt" "~/Workspace/morse-code-master/include/README.org" "~/Workspace/morse-code-master/include/README.md" "~/Workspace/morse-code-master/include/Makefile" "~/Workspace/morse-code-master/include/LICENSE" "~/Workspace/morse-code-master/text.txt~" "~/Workspace/morse-code-master/morse.txt~" "~/Workspace/morse-code-master/init.c~" "~/Workspace/morse-code-master/encode.h~" "~/Workspace/morse-code-master/encode.c~" "~/Workspace/morse-code-master/decoder.h~" "~/Workspace/morse-code-master/decode.h~" "~/Workspace/morse-code-master/decode.c~" "~/Workspace/morse-code-master/README.org~" "~/Workspace/morse-code-master/.gitignore~" "~/Workspace/morse-code-master/src/*.c" "~/Workspace/morse-code-master/include/*.h" "~/Workspace/morse-code-master (copy)/Makefile" "~/.emacs.d/elpa/c-eldoc-20160704.957/c-eldoc-autoloads.el" "~/.emacs.d/.emacs.desktop" "~/Workspace/morse-code-master/init.c" "~/Workspace/morse-code-master/encode.h" "~/Workspace/morse-code-master/decode.h" "~/Workspace/morse-code-master/encode.c" "~/Workspace/morse-code-master/libmorse.h" "~/Workspace/morse-code-master/libmorse.c" "~/Workspace/morse-code-master/main.c" "~/Workspace/morse-code-master/decode.c" "~/.emacs.d/elpa/term+-20160404.355/term+-autoloads.el"))
(setq-default search-ring '("frea" "which-i"))
(setq-default regexp-search-ring '("diagram" "Basi"))
(setq-default TeX-command-history '("LaTeX"))
(setq-default buffer-name-history '(" *NeoTree*" "*ansi-term*<2>" "*Calendar*" "Fig1.png" "lib.h" "init.c" "*ansi-term*<3>" ".emacs" "*ansi-term*" "ra.org" "Pictures" "*compilation*" "*Keys*" "English Presentation.org" "Workspace" "'English Presentation'" "main.c" "libmorse.c" "README.org" ".eamcs" "libmorse.h" "decode.h" "encode.h~" "decode.c" "encode.h" "*Customize Group: Flycheck Options*" "encode.c" ".git" "src" "bin" "src<include>" "include" "Makefile" "*Custom Themes*" "*Man strcat*" "morse-code-master" "decoder.h" "README.md" "Read.md" "*terminal*" "kt.c"))
(setq-default c-set-style-history '("gnu"))
(setq-default command-history '((find-file "~/.emacs" t) (neotree)))
(setq-default compile-history '("make 1" "make -k "))
(setq-default dired-shell-command-history '("ls"))
(setq-default ede-proj-target-history '("program"))
(setq-default extended-command-history '("neotree" "package-install" "eval-buffer" "neotree-dir" "menu-bar-mode" "visual-line-mode" "org-version" "pandoc-mode" "org-mode" "menu-bar-options-save" "restart-emacs" "package-list-packages" "org-goto-calendar" "helm-themes" "info" "insert-date" "ispell" "undo-tree-visualize" "langtool-check" "display-time" "org-html-export-to-html" "org-latex-export-as-latex" "plantuml-run-and-display" "plantuml-render-region" "plantuml-run" "eldoc-mode" "turn-on-eldoc-mode" "c-turn-on-eldoc-mode" "global-eldoc-mode" "enriched-mode" "rich-minority-mode" "diminished-modes" "diminish" "minor-mode-menu-from-indicator" "helm--minor-mode" "helm-mode" "showkey-log-mode" "wind-below" "m-term-below" "query-replace" "make-directory" "pdf-virtual-view-mode" "compile"))
(setq-default face-name-history '("all faces"))
(setq-default helm-ff-history '("/home/arfed/Documents/" "/home/arfed/" "/home/arfed/Documents/Computer Science/UML/Assignments/Modeling Execrices/" "/home/arfed/Documents/orged/" "/home/arfed/.emacs.d/" "/home/arfed/Workspace/2c48/src/" "/home/arfed/Workspace/" "/home/arfed/Documents/ISTA/" "/home/arfed/Workspace/morse-code-master/src/" "/home/arfed/Workspace/morse-code-master/include/" "/home/arfed/Workspace/morse-code-master/" "/home/arfed/Workspace/clm/"))
(setq-default helm-source-complex-command-history '((name . "Complex Command History") (candidates . #[0 "\301\211:\203  @\262\302\232\204 \303!B\262A\262\202 \211\237\207" [command-history nil \.\.\. prin1-to-string] 5]) (action ("Eval" . #[257 "\302\300!\203 \211\303!\211	@\232\204 \211	B\210\304\305\306\307$\207" [helm-sexp--last-sexp command-history boundp read run-with-timer 0.1 nil helm-sexp-eval] 6 "

(fn CANDIDATE)"]) ("Edit and eval" . #[257 "\300\301\302!\"\207" [edit-and-eval-command "Eval: " read] 5 "

(fn CANDIDATE)"])) (persistent-action . helm-sexp-eval) (multiline) (filtered-candidate-transformer helm-fuzzy-highlight-matches) (match helm-mm-exact-match helm-mm-match) (header-line . "C-j: helm-sexp-eval (keeping session)") (multimatch)))
(setq-default helm-source-file-name-history '((name . "File Name History") (candidates . file-name-history) (action . helm-type-file-actions) (persistent-action . ignore) (filtered-candidate-transformer helm-file-name-history-transformer helm-fuzzy-highlight-matches) (match helm-mm-exact-match helm-mm-match) (header-line . "C-j: ignore (keeping session)") (matchplugin)))
(setq-default helm-source-global-mark-ring '((name . "global-mark-ring") (candidates . helm-global-mark-ring-get-candidates) (action ("Goto line" lambda \.\.\. \.\.\.)) (persistent-action . #[257 "\300\301\"\302A@!\210\303\304@!!\210\305 \207" [split-string ":" switch-to-buffer helm-goto-line string-to-number helm-highlight-current-line] 5 "

(fn CANDIDATE)"]) (persistent-help . "Show this line") (filtered-candidate-transformer helm-fuzzy-highlight-matches) (match helm-mm-exact-match helm-mm-match) (header-line . "C-j: Show this line (keeping session)") (multimatch)))
(setq-default helm-source-info-automake-history '((name . "Info Index: automake-history") (init . helm-info-init) (candidates . helm-candidates-in-buffer) (action ("Goto node" . helm-info-goto)) (filtered-candidate-transformer helm-fuzzy-highlight-matches) (display-to-real . helm-info-display-to-real) (volatile) (match identity) (header-line . "C-j: Goto node (keeping session)") (multimatch) (get-line . buffer-substring) (search helm-mm-exact-search helm-mm-search helm-candidates-in-buffer-search-default-fn) (info-file . "automake-history")))
(setq-default helm-source-info-history '((name . "Info Index: history") (init . helm-info-init) (candidates . helm-candidates-in-buffer) (action ("Goto node" . helm-info-goto)) (filtered-candidate-transformer helm-fuzzy-highlight-matches) (display-to-real . helm-info-display-to-real) (volatile) (match identity) (header-line . "C-j: Goto node (keeping session)") (multimatch) (get-line . buffer-substring) (search helm-mm-exact-search helm-mm-search helm-candidates-in-buffer-search-default-fn) (info-file . "history")))
(setq-default helm-source-kill-ring '((name . "Kill Ring") (last-command . kill-region) (init . #[0 "\301\300\"\207" [last-command helm-attrset] 3]) (candidates . helm-kill-ring-candidates) (keymap keymap (27 keymap \.\.\. \.\.\.) keymap (f13 lambda nil \.\.\. \.\.\.) (f12 lambda nil \.\.\. \.\.\.) (f11 lambda nil \.\.\. \.\.\.) (f10 lambda nil \.\.\. \.\.\.) (f9 lambda nil \.\.\. \.\.\.) (f8 lambda nil \.\.\. \.\.\.) (f7 lambda nil \.\.\. \.\.\.) (f6 lambda nil \.\.\. \.\.\.) (f5 lambda nil \.\.\. \.\.\.) (f4 lambda nil \.\.\. \.\.\.) (f3 lambda nil \.\.\. \.\.\.) (f2 lambda nil \.\.\. \.\.\.) (menu-bar keymap \.\.\.) (help keymap \.\.\.) (f1 lambda nil \.\.\. \.\.\.) (8 keymap \.\.\. \.\.\. \.\.\. \.\.\.) (20 . helm-toggle-resplit-and-swap-windows) (C-tab . undefined) (67108897 . helm-toggle-suspend-update) (3 keymap \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\.) (67108987 . helm-enlarge-window) (67108989 . helm-narrow-window) (19 . undefined) (18 . undefined) (23 . helm-yank-text-at-point) (24 keymap \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\.) (11 . helm-delete-minibuffer-contents) (67108896 . helm-toggle-visible-mark) (0 . helm-toggle-visible-mark) (C-M-up . helm-scroll-other-window-down) (C-M-down . helm-scroll-other-window) (M-prior . helm-scroll-other-window-down) (M-next . helm-scroll-other-window) (12 . helm-recenter-top-bottom-other-window) (15 . helm-next-source) (10 . helm-execute-persistent-action) (26 . helm-execute-persistent-action) (9 . helm-select-action) (13 . helm-maybe-exit-minibuffer) (left . helm-previous-source) (right . helm-next-source) (7 . helm-keyboard-quit) (22 . helm-next-page) (27 keymap \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\.) (next . helm-next-page) (prior . helm-previous-page) (C-up . helm-follow-action-backward) (C-down . helm-follow-action-forward) (16 . helm-previous-line) (14 . helm-next-line) (up . helm-previous-line) (down . helm-next-line) keymap (18 . helm-minibuffer-history) (menu-bar keymap \.\.\.) (10 . exit-minibuffer) (13 . exit-minibuffer) (7 . abort-recursive-edit) (C-tab . file-cache-minibuffer-complete) (9 . self-insert-command) (XF86Back . previous-history-element) (up . previous-line-or-history-element) (prior . previous-history-element) (XF86Forward . next-history-element) (down . next-line-or-history-element) (next . next-history-element) (27 keymap \.\.\. \.\.\. \.\.\. \.\.\. \.\.\.)) (action . helm-kill-ring-actions) (persistent-action . #[257 "\300\207" [nil] 2 "

(fn CANDIDATE)"]) (persistent-help . "DoNothing") (multiline) (filtered-candidate-transformer helm-kill-ring-transformer helm-fuzzy-highlight-matches) (match helm-mm-exact-match helm-mm-match helm-mm-3-migemo-match) (header-line . "C-j: DoNothing (keeping session)") (multimatch) (migemo)))
(setq-default helm-source-mark-ring '((name . "mark-ring") (candidates . helm-mark-ring-get-candidates) (action ("Goto line" lambda \.\.\. \.\.\.)) (persistent-action . #[257 "\300\301!!\210\302 \207" [helm-goto-line string-to-number helm-highlight-current-line] 4 "

(fn CANDIDATE)"]) (persistent-help . "Show this line") (filtered-candidate-transformer helm-fuzzy-highlight-matches) (match helm-mm-exact-match helm-mm-match) (header-line . "C-j: Show this line (keeping session)") (multimatch)))
(setq-default hi-lock-face-history '("hi-yellow" "hi-pink" "hi-green" "hi-blue" "hi-black-b" "hi-blue-b" "hi-red-b" "hi-green-b" "hi-black-hb"))
(setq-default minibuffer-history '("all" "/home/arfed/Documents/Computer Science" "neo" "/home/arfed/cheatsheet.org" "ox-p" "/home/arfed/Documents/Computer Science/UML/Assignments/Modeling Execrices/1.org" "pandoc" "/home/arfed/Documents/Computer Science/UML/Assignments/Modeling Execrices/Modeling.org" "pand" "/home/arfed/Documents/orged/UML.org" #("Show" 0 4 (fontified t)) "org-do" "lang" "/home/arfed/.emacs.d/" "rich"))
(setq-default occur-collect-regexp-history '("\\1"))
(setq-default query-replace-history '("PENDING" "WAITING" "Diagram" "diagram" "LIB" "BASE"))
(setq-default read-flycheck-checker-history '("c/c++-clang" "c/c++-gcc"))
(setq-default serial-name-history '("/dev/ttyS0"))
(setq-default serial-speed-history '("9600" "1200" "2400" "4800" "14400" "19200" "28800" "38400" "57600" "115200"))
(setq-default shell-command-history '("pwd" "git clone github.com/0x0584/2c48"))
(setq-default smex-history '(neotree package-install eval-buffer visual-line-mode menu-bar-mode menu-bar-options-save package-list-packages))
(setq-default table-capture-columns-history '(""))
(setq-default table-capture-justify-history '("left"))
(setq-default table-capture-min-cell-width-history '("5"))
(setq-default table-cell-height-history '("1"))
(setq-default table-cell-span-direction-history '("right"))
(setq-default table-cell-split-contents-to-history '("split"))
(setq-default table-cell-split-orientation-history '("horizontally"))
(setq-default table-cell-width-history '("5"))
(setq-default table-col-delim-regexp-history '(""))
(setq-default table-columns-history '("3"))
(setq-default table-insert-row-column-history '("row"))
(setq-default table-justify-history '("center"))
(setq-default table-row-delim-regexp-history '(""))
(setq-default table-rows-history '("3"))
(setq-default table-sequence-count-history '("0"))
(setq-default table-sequence-increment-history '("1"))
(setq-default table-sequence-interval-history '("1"))
(setq-default table-sequence-justify-history '("left"))
(setq-default table-sequence-string-history '("0"))
(setq-default table-source-caption-history '("Table"))
(setq-default table-source-language-history '("html"))
(setq-default table-target-history '("cell"))
(setq-default yes-or-no-p-history '("yes" "yeds" "no"))
