;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("stdarg.h" include (:system-flag t) nil [1 20])
            ("iostream" include (:system-flag t) nil [22 41])
            ("vector" include (:system-flag t) nil [42 59])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [61 81])
            ("unless" variable (:constant-flag t) nil [91 97])
            ("Map" type
               (:members 
                  ( ("ushort" type
                       (:typedef ("unsigned short")
                        :type "typedef")
                        (reparse-symbol classsubparts) [129 159])
                    ("node_t" type
                       (:typedef ("List" type
                             (:prototype t
                              :type "class")
                              nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [162 188])
                    ("obst_t" type
                       (:typedef ("Obstacle" type
                             (:prototype t
                              :type "class")
                              nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [191 221])
                    ("snake_t" type
                       (:typedef ("Snake" type
                             (:prototype t
                              :type "class")
                              nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [224 252])
                    ("" type
                       (:members 
                          ( ("INDEX_Y" variable
                               (:constant-flag t
                                :default-value (275 276)
                                :type "int")
                                (reparse-symbol enumsubparts) [265 276])
                            ("INDEX_X" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [278 287]))                          
                        :type "enum")
                        (reparse-symbol classsubparts) [258 288])
                    ("GameMode" type
                       (:members 
                          ( ("FREE" variable
                               (:constant-flag t
                                :default-value (313 314)
                                :type "int")
                                (reparse-symbol enumsubparts) [306 314])
                            ("LEVELS" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [316 324]))                          
                        :type "enum")
                        (reparse-symbol classsubparts) [291 325])
                    ("" type
                       (:members 
                          ( ("UP" variable
                               (:constant-flag t
                                :default-value (342 343)
                                :type "int")
                                (reparse-symbol enumsubparts) [337 343])
                            ("LEFT" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [356 361])
                            ("DOWN" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [373 378])
                            ("RIGHT" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [390 396])
                            ("LEFT_OR_RIGHT" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [409 423])
                            ("UP_OR_DOWN" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [434 445])
                            ("EDGE" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [458 463])
                            ("FRUIT" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [476 490]))                          
                        :type "enum")
                        (reparse-symbol classsubparts) [326 491])
                    ("public" label nil (reparse-symbol classsubparts) [492 499])
                    ("Map" function
                       (:prototype-flag t
                        :constructor-flag t
                        :arguments 
                          ( ("ydim" variable (:type ("ushort" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [506 518])
                            ("xdim" variable (:type ("ushort" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [519 531]))                          
                        :type ("Map" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [502 532])
                    ("Map" function
                       (:prototype-flag t
                        :destructor-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [535 542])
                    ("GameLoop" function
                       (:prototype-flag t
                        :arguments 
                          ( ("millsec" variable (:type "int") (reparse-symbol arg-sub-list) [559 571])
                            ("mode" variable (:type ("GameMode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [572 586]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [545 587])
                    ("private" label nil (reparse-symbol classsubparts) [588 596])
                    ("NO_TIME_LIMIT" variable
                       (:constant-flag t
                        :default-value "-1"
                        :type "int")
                        (reparse-symbol classsubparts) [614 643])
                    ("STANDARD_TIMING" variable
                       (:constant-flag t
                        :default-value "(30 * 1000)"
                        :type "int")
                        (reparse-symbol classsubparts) [646 686])
                    ("MIN_DIM_Y" variable
                       (:constant-flag t
                        :default-value "20"
                        :type "int")
                        (reparse-symbol classsubparts) [700 741])
                    ("MIN_DIM_X" variable
                       (:constant-flag t
                        :default-value "75"
                        :type "int")
                        (reparse-symbol classsubparts) [700 741])
                    ("ydim" variable
                       (:default-value "0"
                        :type ("ushort" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [778 804])
                    ("xdim" variable
                       (:default-value "0"
                        :type ("ushort" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [778 804])
                    ("grid" variable (:type ("vector" type
                         (:template-specifier 
                            ( ("vector" type (:template-specifier 
                                ( ("char" type nil nil nil))                                ) nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol classsubparts) [807 833])
                    ("obs" variable (:type ("vector" type
                         (:template-specifier 
                            ( ("obst_t" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol classsubparts) [836 855])
                    ("Obstacle" type
                       (:members 
                          ( ("public" label nil (reparse-symbol classsubparts) [911 918])
                            ("Obstacle" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("c" variable (:type "char") (reparse-symbol arg-sub-list) [932 939])
                                    ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) [940 944]))                                  
                                :type ("Obstacle" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [923 945])
                            ("Obstacle" function
                               (:prototype-flag t
                                :destructor-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [950 962])
                            ("AppendToGrid" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("grid" variable (:type ("vector" type
                                         (:template-specifier 
                                            ( ("vector" type (:template-specifier 
                                                ( ("char" type nil nil nil))                                                ) nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [985 1011]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [967 1018])
                            ("private" label nil (reparse-symbol classsubparts) [1021 1029])
                            ("edge" variable (:type ("vector" type
                                 (:template-specifier 
                                    ( ("int" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [1034 1051])
                            ("c" variable (:type "char") (reparse-symbol classsubparts) [1056 1063]))                          
                        :type "class")
                        (reparse-symbol classsubparts) [892 1085])
                    ("Snake" type
                       (:members 
                          ( ("public" label nil (reparse-symbol classsubparts) [1121 1128])
                            ("Snake" function
                               (:prototype-flag t
                                :constructor-flag t
                                :type ("Snake" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1133 1141])
                            ("Snake" function
                               (:prototype-flag t
                                :destructor-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [1146 1155])
                            ("private" label nil (reparse-symbol classsubparts) [1158 1166])
                            ("symb" variable
                               (:default-value "((string)\"^<v>\") + \"-|\" + \"+\" + \"x\""
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1171 1221])
                            ("head" variable
                               (:pointer 1
                                :type ("List" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1226 1237]))                          
                        :type "class")
                        (reparse-symbol classsubparts) [1105 1242])
                    ("List" type
                       (:members 
                          ( ("public" label nil (reparse-symbol classsubparts) [1283 1290])
                            ("List" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("iy" variable (:type ("ushort" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1300 1310])
                                    ("ix" variable (:type ("ushort" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1311 1321]))                                  
                                :type ("List" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1295 1322])
                            ("List" function
                               (:prototype-flag t
                                :destructor-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [1327 1335])
                            ("Append" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [1340 1360])
                            ("Remove" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [1365 1385])
                            ("private" label nil (reparse-symbol classsubparts) [1388 1396])
                            ("next" variable
                               (:pointer 1
                                :type ("node_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1401 1421])
                            ("prev" variable
                               (:pointer 1
                                :type ("node_t" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1401 1421])
                            ("index" variable
                               (:dereference 1
                                :type ("ushort" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1426 1442]))                          
                        :type "class")
                        (reparse-symbol classsubparts) [1268 1447]))                  
                :type "class")
                nil [115 1450])
            ("main" function
               (:arguments 
                  ( ("argc" variable (:type "int") (reparse-symbol arg-sub-list) [1461 1470])
                    ("argv" variable
                       (:pointer 2
                        :type "char")
                        (reparse-symbol arg-sub-list) [1471 1483]))                  
                :type "int")
                nil [1452 1500]))          
      :file "snake.cc"
      :pointmax 1501
      :fsize 1500
      :lastmodtime '(22896 45141 244666 24000)
      :unmatched-syntax nil
      :lexical-table 
        '(("unless" (spp-arg-list ("foo") 97 . 102) . ((IF "if" 103 . 105) (semantic-list "(!(foo))" 105 . 113)))
          )
))
  :file "!home!arfed!Workspace!snake!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
